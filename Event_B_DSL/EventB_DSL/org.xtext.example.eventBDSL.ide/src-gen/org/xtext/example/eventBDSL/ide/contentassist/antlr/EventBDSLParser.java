/*
 * generated by Xtext 2.22.0
 */
package org.xtext.example.eventBDSL.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.eventBDSL.ide.contentassist.antlr.internal.InternalEventBDSLParser;
import org.xtext.example.eventBDSL.services.EventBDSLGrammarAccess;

public class EventBDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(EventBDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, EventBDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getInvariant1Access().getTypagePredicatesAlternatives_1_0(), "rule__Invariant1__TypagePredicatesAlternatives_1_0");
			builder.put(grammarAccess.getInvariant1Access().getTypagePredicatesAlternatives_2_1_0(), "rule__Invariant1__TypagePredicatesAlternatives_2_1_0");
			builder.put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
			builder.put(grammarAccess.getLeftPartPredicateAccess().getAlternatives_1(), "rule__LeftPartPredicate__Alternatives_1");
			builder.put(grammarAccess.getMyIDAccess().getAlternatives(), "rule__MyID__Alternatives");
			builder.put(grammarAccess.getMachineAccess().getGroup(), "rule__Machine__Group__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_2(), "rule__Machine__Group_2__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_2_2(), "rule__Machine__Group_2_2__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_3(), "rule__Machine__Group_3__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_3_2(), "rule__Machine__Group_3_2__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_4(), "rule__Machine__Group_4__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_4_2(), "rule__Machine__Group_4_2__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_4_2_2(), "rule__Machine__Group_4_2_2__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_5(), "rule__Machine__Group_5__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_5_2(), "rule__Machine__Group_5_2__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_6(), "rule__Machine__Group_6__0");
			builder.put(grammarAccess.getMachineAccess().getGroup_6_2(), "rule__Machine__Group_6_2__0");
			builder.put(grammarAccess.getSetAccess().getGroup(), "rule__Set__Group__0");
			builder.put(grammarAccess.getSetAccess().getGroup_0(), "rule__Set__Group_0__0");
			builder.put(grammarAccess.getSetAccess().getGroup_5(), "rule__Set__Group_5__0");
			builder.put(grammarAccess.getInvariant1Access().getGroup(), "rule__Invariant1__Group__0");
			builder.put(grammarAccess.getInvariant1Access().getGroup_0(), "rule__Invariant1__Group_0__0");
			builder.put(grammarAccess.getInvariant1Access().getGroup_2(), "rule__Invariant1__Group_2__0");
			builder.put(grammarAccess.getTypagePredicate1Access().getGroup(), "rule__TypagePredicate1__Group__0");
			builder.put(grammarAccess.getTypagePredicate2Access().getGroup(), "rule__TypagePredicate2__Group__0");
			builder.put(grammarAccess.getLeftPartPredicateSubListAccess().getGroup(), "rule__LeftPartPredicateSubList__Group__0");
			builder.put(grammarAccess.getDisconjuctionAccess().getGroup(), "rule__Disconjuction__Group__0");
			builder.put(grammarAccess.getDisconjuctionAccess().getGroup_1(), "rule__Disconjuction__Group_1__0");
			builder.put(grammarAccess.getConjuctionAccess().getGroup(), "rule__Conjuction__Group__0");
			builder.put(grammarAccess.getConjuctionAccess().getGroup_1(), "rule__Conjuction__Group_1__0");
			builder.put(grammarAccess.getPrimaryAccess().getGroup_1(), "rule__Primary__Group_1__0");
			builder.put(grammarAccess.getLeftPartPredicateAccess().getGroup(), "rule__LeftPartPredicate__Group__0");
			builder.put(grammarAccess.getInitializationAccess().getGroup(), "rule__Initialization__Group__0");
			builder.put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getGuardAccess().getGroup(), "rule__Guard__Group__0");
			builder.put(grammarAccess.getActionsRuleAccess().getGroup(), "rule__ActionsRule__Group__0");
			builder.put(grammarAccess.getActionsRuleAccess().getGroup_1(), "rule__ActionsRule__Group_1__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getMachineAccess().getNameAssignment_1(), "rule__Machine__NameAssignment_1");
			builder.put(grammarAccess.getMachineAccess().getSetsAssignment_2_1(), "rule__Machine__SetsAssignment_2_1");
			builder.put(grammarAccess.getMachineAccess().getSetsAssignment_2_2_1(), "rule__Machine__SetsAssignment_2_2_1");
			builder.put(grammarAccess.getMachineAccess().getVariablesAssignment_3_1(), "rule__Machine__VariablesAssignment_3_1");
			builder.put(grammarAccess.getMachineAccess().getVariablesAssignment_3_2_1(), "rule__Machine__VariablesAssignment_3_2_1");
			builder.put(grammarAccess.getMachineAccess().getInvariants1Assignment_4_1(), "rule__Machine__Invariants1Assignment_4_1");
			builder.put(grammarAccess.getMachineAccess().getInvariantsLeftPart2Assignment_4_2_1(), "rule__Machine__InvariantsLeftPart2Assignment_4_2_1");
			builder.put(grammarAccess.getMachineAccess().getInvariantsLeftPart2Assignment_4_2_2_1(), "rule__Machine__InvariantsLeftPart2Assignment_4_2_2_1");
			builder.put(grammarAccess.getMachineAccess().getInitializationsAssignment_5_1(), "rule__Machine__InitializationsAssignment_5_1");
			builder.put(grammarAccess.getMachineAccess().getInitializationsAssignment_5_2_1(), "rule__Machine__InitializationsAssignment_5_2_1");
			builder.put(grammarAccess.getMachineAccess().getEventsAssignment_6_1(), "rule__Machine__EventsAssignment_6_1");
			builder.put(grammarAccess.getMachineAccess().getEventsAssignment_6_2_1(), "rule__Machine__EventsAssignment_6_2_1");
			builder.put(grammarAccess.getSetAccess().getCommentAssignment_0_1(), "rule__Set__CommentAssignment_0_1");
			builder.put(grammarAccess.getSetAccess().getNameAssignment_1(), "rule__Set__NameAssignment_1");
			builder.put(grammarAccess.getSetAccess().getValuesAssignment_4(), "rule__Set__ValuesAssignment_4");
			builder.put(grammarAccess.getSetAccess().getValuesAssignment_5_1(), "rule__Set__ValuesAssignment_5_1");
			builder.put(grammarAccess.getSetValueAccess().getNameAssignment(), "rule__SetValue__NameAssignment");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment(), "rule__Variable__NameAssignment");
			builder.put(grammarAccess.getInvariant1Access().getCommentAssignment_0_1(), "rule__Invariant1__CommentAssignment_0_1");
			builder.put(grammarAccess.getInvariant1Access().getTypagePredicatesAssignment_1(), "rule__Invariant1__TypagePredicatesAssignment_1");
			builder.put(grammarAccess.getInvariant1Access().getTypagePredicatesAssignment_2_1(), "rule__Invariant1__TypagePredicatesAssignment_2_1");
			builder.put(grammarAccess.getTypagePredicate1Access().getNameAssignment_0(), "rule__TypagePredicate1__NameAssignment_0");
			builder.put(grammarAccess.getTypagePredicate1Access().getValueAssignment_2(), "rule__TypagePredicate1__ValueAssignment_2");
			builder.put(grammarAccess.getTypagePredicate2Access().getNameAssignment_0(), "rule__TypagePredicate2__NameAssignment_0");
			builder.put(grammarAccess.getTypagePredicate2Access().getValueAssignment_2(), "rule__TypagePredicate2__ValueAssignment_2");
			builder.put(grammarAccess.getLeftPartPredicateSubListAccess().getLeftPartPredicateListAssignment_1(), "rule__LeftPartPredicateSubList__LeftPartPredicateListAssignment_1");
			builder.put(grammarAccess.getLeftPartPredicateSubListAccess().getRightPartPredicateListAssignment_3(), "rule__LeftPartPredicateSubList__RightPartPredicateListAssignment_3");
			builder.put(grammarAccess.getDisconjuctionAccess().getRightAssignment_1_2(), "rule__Disconjuction__RightAssignment_1_2");
			builder.put(grammarAccess.getConjuctionAccess().getRightAssignment_1_2(), "rule__Conjuction__RightAssignment_1_2");
			builder.put(grammarAccess.getLeftPartPredicateAccess().getVal1Assignment_0(), "rule__LeftPartPredicate__Val1Assignment_0");
			builder.put(grammarAccess.getLeftPartPredicateAccess().getVal2Assignment_2(), "rule__LeftPartPredicate__Val2Assignment_2");
			builder.put(grammarAccess.getInitializationAccess().getNameAssignment_0(), "rule__Initialization__NameAssignment_0");
			builder.put(grammarAccess.getInitializationAccess().getValueAssignment_2(), "rule__Initialization__ValueAssignment_2");
			builder.put(grammarAccess.getEventAccess().getCommentAssignment_0(), "rule__Event__CommentAssignment_0");
			builder.put(grammarAccess.getEventAccess().getNameAssignment_1(), "rule__Event__NameAssignment_1");
			builder.put(grammarAccess.getEventAccess().getParametersAssignment_5(), "rule__Event__ParametersAssignment_5");
			builder.put(grammarAccess.getEventAccess().getGuardsAssignment_7(), "rule__Event__GuardsAssignment_7");
			builder.put(grammarAccess.getEventAccess().getActionsAssignment_9(), "rule__Event__ActionsAssignment_9");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
			builder.put(grammarAccess.getParameterAccess().getAssignedSetAssignment_2(), "rule__Parameter__AssignedSetAssignment_2");
			builder.put(grammarAccess.getGuardAccess().getGuardExp1Assignment_0(), "rule__Guard__GuardExp1Assignment_0");
			builder.put(grammarAccess.getGuardAccess().getGuardExp2Assignment_2(), "rule__Guard__GuardExp2Assignment_2");
			builder.put(grammarAccess.getGuardAccess().getGuardExp3Assignment_4(), "rule__Guard__GuardExp3Assignment_4");
			builder.put(grammarAccess.getGuardAccess().getGuardExp4Assignment_6(), "rule__Guard__GuardExp4Assignment_6");
			builder.put(grammarAccess.getActionsRuleAccess().getActionListAssignment_0(), "rule__ActionsRule__ActionListAssignment_0");
			builder.put(grammarAccess.getActionsRuleAccess().getActionListAssignment_1_1(), "rule__ActionsRule__ActionListAssignment_1_1");
			builder.put(grammarAccess.getActionAccess().getActionLeftPartAssignment_0(), "rule__Action__ActionLeftPartAssignment_0");
			builder.put(grammarAccess.getActionAccess().getActionRightPartAssignment_2(), "rule__Action__ActionRightPartAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private EventBDSLGrammarAccess grammarAccess;

	@Override
	protected InternalEventBDSLParser createParser() {
		InternalEventBDSLParser result = new InternalEventBDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public EventBDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(EventBDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
