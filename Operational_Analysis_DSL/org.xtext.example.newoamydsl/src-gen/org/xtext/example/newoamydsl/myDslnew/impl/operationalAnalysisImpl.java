/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.newoamydsl.myDslnew.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.newoamydsl.myDslnew.AbstractPropertyValue;
import org.xtext.example.newoamydsl.myDslnew.ComponentExchange;
import org.xtext.example.newoamydsl.myDslnew.ComponentExchangeCategory;
import org.xtext.example.newoamydsl.myDslnew.ConceptPkg;
import org.xtext.example.newoamydsl.myDslnew.DataPkg;
import org.xtext.example.newoamydsl.myDslnew.EntityPkg;
import org.xtext.example.newoamydsl.myDslnew.EnumerationPropertyType;
import org.xtext.example.newoamydsl.myDslnew.ExchangeLink;
import org.xtext.example.newoamydsl.myDslnew.FunctionPkg;
import org.xtext.example.newoamydsl.myDslnew.InterfacePkg;
import org.xtext.example.newoamydsl.myDslnew.MyDslnewPackage;
import org.xtext.example.newoamydsl.myDslnew.OperationalActivityPkg;
import org.xtext.example.newoamydsl.myDslnew.OperationalCapabilityPkg;
import org.xtext.example.newoamydsl.myDslnew.PropertyValueGroup;
import org.xtext.example.newoamydsl.myDslnew.PropertyValuePkg;
import org.xtext.example.newoamydsl.myDslnew.RequirementsPkg;
import org.xtext.example.newoamydsl.myDslnew.RolePkg;
import org.xtext.example.newoamydsl.myDslnew.Trace;
import org.xtext.example.newoamydsl.myDslnew.operationalAnalysis;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>operational Analysis</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getArchitectureId <em>Architecture Id</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getSid <em>Sid</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getArchitectureName <em>Architecture Name</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getVisibleInDoc <em>Visible In Doc</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getVisibleInLM <em>Visible In LM</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getSummary <em>Summary</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getReview <em>Review</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getAppliedPropertyValues <em>Applied Property Values</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getAppliedPropertyValueGroups <em>Applied Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getStatus <em>Status</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getFeatures <em>Features</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedPropertyValues <em>Owned Property Values</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedEnumerationPropertyTypes <em>Owned Enumeration Property Types</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedPropertyValueGroups <em>Owned Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedTraces <em>Owned Traces</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedPropertyValuePkgs <em>Owned Property Value Pkgs</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedFunctionPkg <em>Owned Function Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getContainedOperationalCapabilityPkg <em>Contained Operational Capability Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedComponentExchanges <em>Owned Component Exchanges</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedComponentExchangeCategories <em>Owned Component Exchange Categories</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedFunctionalLinks <em>Owned Functional Links</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedRequirementPkgs <em>Owned Requirement Pkgs</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getContainedOperationalActivityPkg <em>Contained Operational Activity Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedInterfacePkg <em>Owned Interface Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedDataPkg <em>Owned Data Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedRolePkg <em>Owned Role Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedEntityPkg <em>Owned Entity Pkg</em>}</li>
 *   <li>{@link org.xtext.example.newoamydsl.myDslnew.impl.operationalAnalysisImpl#getOwnedConceptPkg <em>Owned Concept Pkg</em>}</li>
 * </ul>
 *
 * @generated
 */
public class operationalAnalysisImpl extends MinimalEObjectImpl.Container implements operationalAnalysis
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getArchitectureId() <em>Architecture Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitectureId()
   * @generated
   * @ordered
   */
  protected static final String ARCHITECTURE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArchitectureId() <em>Architecture Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitectureId()
   * @generated
   * @ordered
   */
  protected String architectureId = ARCHITECTURE_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected static final String SID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected String sid = SID_EDEFAULT;

  /**
   * The default value of the '{@link #getArchitectureName() <em>Architecture Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitectureName()
   * @generated
   * @ordered
   */
  protected static final String ARCHITECTURE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArchitectureName() <em>Architecture Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitectureName()
   * @generated
   * @ordered
   */
  protected String architectureName = ARCHITECTURE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_DOC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected String visibleInDoc = VISIBLE_IN_DOC_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_LM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected String visibleInLM = VISIBLE_IN_LM_EDEFAULT;

  /**
   * The default value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected static final String SUMMARY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected String summary = SUMMARY_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected static final String REVIEW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected String review = REVIEW_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValues = APPLIED_PROPERTY_VALUES_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValueGroups = APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT;

  /**
   * The default value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected static final String STATUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected String status = STATUS_EDEFAULT;

  /**
   * The default value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected static final String FEATURES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected String features = FEATURES_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedPropertyValues() <em>Owned Property Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValues()
   * @generated
   * @ordered
   */
  protected EList<AbstractPropertyValue> ownedPropertyValues;

  /**
   * The cached value of the '{@link #getOwnedEnumerationPropertyTypes() <em>Owned Enumeration Property Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedEnumerationPropertyTypes()
   * @generated
   * @ordered
   */
  protected EList<EnumerationPropertyType> ownedEnumerationPropertyTypes;

  /**
   * The cached value of the '{@link #getOwnedPropertyValueGroups() <em>Owned Property Value Groups</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected EList<PropertyValueGroup> ownedPropertyValueGroups;

  /**
   * The cached value of the '{@link #getOwnedTraces() <em>Owned Traces</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedTraces()
   * @generated
   * @ordered
   */
  protected EList<Trace> ownedTraces;

  /**
   * The cached value of the '{@link #getOwnedPropertyValuePkgs() <em>Owned Property Value Pkgs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValuePkgs()
   * @generated
   * @ordered
   */
  protected EList<PropertyValuePkg> ownedPropertyValuePkgs;

  /**
   * The cached value of the '{@link #getOwnedFunctionPkg() <em>Owned Function Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFunctionPkg()
   * @generated
   * @ordered
   */
  protected FunctionPkg ownedFunctionPkg;

  /**
   * The cached value of the '{@link #getContainedOperationalCapabilityPkg() <em>Contained Operational Capability Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainedOperationalCapabilityPkg()
   * @generated
   * @ordered
   */
  protected OperationalActivityPkg containedOperationalCapabilityPkg;

  /**
   * The cached value of the '{@link #getOwnedComponentExchanges() <em>Owned Component Exchanges</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchanges()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchange> ownedComponentExchanges;

  /**
   * The cached value of the '{@link #getOwnedComponentExchangeCategories() <em>Owned Component Exchange Categories</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchangeCategories()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchangeCategory> ownedComponentExchangeCategories;

  /**
   * The cached value of the '{@link #getOwnedFunctionalLinks() <em>Owned Functional Links</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFunctionalLinks()
   * @generated
   * @ordered
   */
  protected EList<ExchangeLink> ownedFunctionalLinks;

  /**
   * The cached value of the '{@link #getOwnedRequirementPkgs() <em>Owned Requirement Pkgs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedRequirementPkgs()
   * @generated
   * @ordered
   */
  protected EList<RequirementsPkg> ownedRequirementPkgs;

  /**
   * The cached value of the '{@link #getContainedOperationalActivityPkg() <em>Contained Operational Activity Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainedOperationalActivityPkg()
   * @generated
   * @ordered
   */
  protected OperationalCapabilityPkg containedOperationalActivityPkg;

  /**
   * The cached value of the '{@link #getOwnedInterfacePkg() <em>Owned Interface Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedInterfacePkg()
   * @generated
   * @ordered
   */
  protected InterfacePkg ownedInterfacePkg;

  /**
   * The cached value of the '{@link #getOwnedDataPkg() <em>Owned Data Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedDataPkg()
   * @generated
   * @ordered
   */
  protected DataPkg ownedDataPkg;

  /**
   * The cached value of the '{@link #getOwnedRolePkg() <em>Owned Role Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedRolePkg()
   * @generated
   * @ordered
   */
  protected RolePkg ownedRolePkg;

  /**
   * The cached value of the '{@link #getOwnedEntityPkg() <em>Owned Entity Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedEntityPkg()
   * @generated
   * @ordered
   */
  protected EntityPkg ownedEntityPkg;

  /**
   * The cached value of the '{@link #getOwnedConceptPkg() <em>Owned Concept Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedConceptPkg()
   * @generated
   * @ordered
   */
  protected ConceptPkg ownedConceptPkg;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected operationalAnalysisImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslnewPackage.eINSTANCE.getoperationalAnalysis();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArchitectureId()
  {
    return architectureId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArchitectureId(String newArchitectureId)
  {
    String oldArchitectureId = architectureId;
    architectureId = newArchitectureId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_ID, oldArchitectureId, architectureId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSid()
  {
    return sid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSid(String newSid)
  {
    String oldSid = sid;
    sid = newSid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__SID, oldSid, sid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArchitectureName()
  {
    return architectureName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArchitectureName(String newArchitectureName)
  {
    String oldArchitectureName = architectureName;
    architectureName = newArchitectureName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_NAME, oldArchitectureName, architectureName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInDoc()
  {
    return visibleInDoc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInDoc(String newVisibleInDoc)
  {
    String oldVisibleInDoc = visibleInDoc;
    visibleInDoc = newVisibleInDoc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_DOC, oldVisibleInDoc, visibleInDoc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInLM()
  {
    return visibleInLM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInLM(String newVisibleInLM)
  {
    String oldVisibleInLM = visibleInLM;
    visibleInLM = newVisibleInLM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_LM, oldVisibleInLM, visibleInLM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSummary()
  {
    return summary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSummary(String newSummary)
  {
    String oldSummary = summary;
    summary = newSummary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__SUMMARY, oldSummary, summary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReview()
  {
    return review;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReview(String newReview)
  {
    String oldReview = review;
    review = newReview;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__REVIEW, oldReview, review));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValues()
  {
    return appliedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValues(String newAppliedPropertyValues)
  {
    String oldAppliedPropertyValues = appliedPropertyValues;
    appliedPropertyValues = newAppliedPropertyValues;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUES, oldAppliedPropertyValues, appliedPropertyValues));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValueGroups()
  {
    return appliedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValueGroups(String newAppliedPropertyValueGroups)
  {
    String oldAppliedPropertyValueGroups = appliedPropertyValueGroups;
    appliedPropertyValueGroups = newAppliedPropertyValueGroups;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUE_GROUPS, oldAppliedPropertyValueGroups, appliedPropertyValueGroups));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStatus()
  {
    return status;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatus(String newStatus)
  {
    String oldStatus = status;
    status = newStatus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__STATUS, oldStatus, status));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFeatures()
  {
    return features;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFeatures(String newFeatures)
  {
    String oldFeatures = features;
    features = newFeatures;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__FEATURES, oldFeatures, features));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractPropertyValue> getOwnedPropertyValues()
  {
    if (ownedPropertyValues == null)
    {
      ownedPropertyValues = new EObjectContainmentEList<AbstractPropertyValue>(AbstractPropertyValue.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUES);
    }
    return ownedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EnumerationPropertyType> getOwnedEnumerationPropertyTypes()
  {
    if (ownedEnumerationPropertyTypes == null)
    {
      ownedEnumerationPropertyTypes = new EObjectContainmentEList<EnumerationPropertyType>(EnumerationPropertyType.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENUMERATION_PROPERTY_TYPES);
    }
    return ownedEnumerationPropertyTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PropertyValueGroup> getOwnedPropertyValueGroups()
  {
    if (ownedPropertyValueGroups == null)
    {
      ownedPropertyValueGroups = new EObjectContainmentEList<PropertyValueGroup>(PropertyValueGroup.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_GROUPS);
    }
    return ownedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Trace> getOwnedTraces()
  {
    if (ownedTraces == null)
    {
      ownedTraces = new EObjectContainmentEList<Trace>(Trace.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_TRACES);
    }
    return ownedTraces;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PropertyValuePkg> getOwnedPropertyValuePkgs()
  {
    if (ownedPropertyValuePkgs == null)
    {
      ownedPropertyValuePkgs = new EObjectContainmentEList<PropertyValuePkg>(PropertyValuePkg.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_PKGS);
    }
    return ownedPropertyValuePkgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionPkg getOwnedFunctionPkg()
  {
    return ownedFunctionPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedFunctionPkg(FunctionPkg newOwnedFunctionPkg, NotificationChain msgs)
  {
    FunctionPkg oldOwnedFunctionPkg = ownedFunctionPkg;
    ownedFunctionPkg = newOwnedFunctionPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG, oldOwnedFunctionPkg, newOwnedFunctionPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedFunctionPkg(FunctionPkg newOwnedFunctionPkg)
  {
    if (newOwnedFunctionPkg != ownedFunctionPkg)
    {
      NotificationChain msgs = null;
      if (ownedFunctionPkg != null)
        msgs = ((InternalEObject)ownedFunctionPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG, null, msgs);
      if (newOwnedFunctionPkg != null)
        msgs = ((InternalEObject)newOwnedFunctionPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG, null, msgs);
      msgs = basicSetOwnedFunctionPkg(newOwnedFunctionPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG, newOwnedFunctionPkg, newOwnedFunctionPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OperationalActivityPkg getContainedOperationalCapabilityPkg()
  {
    return containedOperationalCapabilityPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContainedOperationalCapabilityPkg(OperationalActivityPkg newContainedOperationalCapabilityPkg, NotificationChain msgs)
  {
    OperationalActivityPkg oldContainedOperationalCapabilityPkg = containedOperationalCapabilityPkg;
    containedOperationalCapabilityPkg = newContainedOperationalCapabilityPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG, oldContainedOperationalCapabilityPkg, newContainedOperationalCapabilityPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainedOperationalCapabilityPkg(OperationalActivityPkg newContainedOperationalCapabilityPkg)
  {
    if (newContainedOperationalCapabilityPkg != containedOperationalCapabilityPkg)
    {
      NotificationChain msgs = null;
      if (containedOperationalCapabilityPkg != null)
        msgs = ((InternalEObject)containedOperationalCapabilityPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG, null, msgs);
      if (newContainedOperationalCapabilityPkg != null)
        msgs = ((InternalEObject)newContainedOperationalCapabilityPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG, null, msgs);
      msgs = basicSetContainedOperationalCapabilityPkg(newContainedOperationalCapabilityPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG, newContainedOperationalCapabilityPkg, newContainedOperationalCapabilityPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchange> getOwnedComponentExchanges()
  {
    if (ownedComponentExchanges == null)
    {
      ownedComponentExchanges = new EObjectContainmentEList<ComponentExchange>(ComponentExchange.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGES);
    }
    return ownedComponentExchanges;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchangeCategory> getOwnedComponentExchangeCategories()
  {
    if (ownedComponentExchangeCategories == null)
    {
      ownedComponentExchangeCategories = new EObjectContainmentEList<ComponentExchangeCategory>(ComponentExchangeCategory.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGE_CATEGORIES);
    }
    return ownedComponentExchangeCategories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExchangeLink> getOwnedFunctionalLinks()
  {
    if (ownedFunctionalLinks == null)
    {
      ownedFunctionalLinks = new EObjectContainmentEList<ExchangeLink>(ExchangeLink.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTIONAL_LINKS);
    }
    return ownedFunctionalLinks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RequirementsPkg> getOwnedRequirementPkgs()
  {
    if (ownedRequirementPkgs == null)
    {
      ownedRequirementPkgs = new EObjectContainmentEList<RequirementsPkg>(RequirementsPkg.class, this, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_REQUIREMENT_PKGS);
    }
    return ownedRequirementPkgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OperationalCapabilityPkg getContainedOperationalActivityPkg()
  {
    return containedOperationalActivityPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContainedOperationalActivityPkg(OperationalCapabilityPkg newContainedOperationalActivityPkg, NotificationChain msgs)
  {
    OperationalCapabilityPkg oldContainedOperationalActivityPkg = containedOperationalActivityPkg;
    containedOperationalActivityPkg = newContainedOperationalActivityPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG, oldContainedOperationalActivityPkg, newContainedOperationalActivityPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainedOperationalActivityPkg(OperationalCapabilityPkg newContainedOperationalActivityPkg)
  {
    if (newContainedOperationalActivityPkg != containedOperationalActivityPkg)
    {
      NotificationChain msgs = null;
      if (containedOperationalActivityPkg != null)
        msgs = ((InternalEObject)containedOperationalActivityPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG, null, msgs);
      if (newContainedOperationalActivityPkg != null)
        msgs = ((InternalEObject)newContainedOperationalActivityPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG, null, msgs);
      msgs = basicSetContainedOperationalActivityPkg(newContainedOperationalActivityPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG, newContainedOperationalActivityPkg, newContainedOperationalActivityPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InterfacePkg getOwnedInterfacePkg()
  {
    return ownedInterfacePkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedInterfacePkg(InterfacePkg newOwnedInterfacePkg, NotificationChain msgs)
  {
    InterfacePkg oldOwnedInterfacePkg = ownedInterfacePkg;
    ownedInterfacePkg = newOwnedInterfacePkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG, oldOwnedInterfacePkg, newOwnedInterfacePkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedInterfacePkg(InterfacePkg newOwnedInterfacePkg)
  {
    if (newOwnedInterfacePkg != ownedInterfacePkg)
    {
      NotificationChain msgs = null;
      if (ownedInterfacePkg != null)
        msgs = ((InternalEObject)ownedInterfacePkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG, null, msgs);
      if (newOwnedInterfacePkg != null)
        msgs = ((InternalEObject)newOwnedInterfacePkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG, null, msgs);
      msgs = basicSetOwnedInterfacePkg(newOwnedInterfacePkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG, newOwnedInterfacePkg, newOwnedInterfacePkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataPkg getOwnedDataPkg()
  {
    return ownedDataPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedDataPkg(DataPkg newOwnedDataPkg, NotificationChain msgs)
  {
    DataPkg oldOwnedDataPkg = ownedDataPkg;
    ownedDataPkg = newOwnedDataPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG, oldOwnedDataPkg, newOwnedDataPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedDataPkg(DataPkg newOwnedDataPkg)
  {
    if (newOwnedDataPkg != ownedDataPkg)
    {
      NotificationChain msgs = null;
      if (ownedDataPkg != null)
        msgs = ((InternalEObject)ownedDataPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG, null, msgs);
      if (newOwnedDataPkg != null)
        msgs = ((InternalEObject)newOwnedDataPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG, null, msgs);
      msgs = basicSetOwnedDataPkg(newOwnedDataPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG, newOwnedDataPkg, newOwnedDataPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RolePkg getOwnedRolePkg()
  {
    return ownedRolePkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedRolePkg(RolePkg newOwnedRolePkg, NotificationChain msgs)
  {
    RolePkg oldOwnedRolePkg = ownedRolePkg;
    ownedRolePkg = newOwnedRolePkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG, oldOwnedRolePkg, newOwnedRolePkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedRolePkg(RolePkg newOwnedRolePkg)
  {
    if (newOwnedRolePkg != ownedRolePkg)
    {
      NotificationChain msgs = null;
      if (ownedRolePkg != null)
        msgs = ((InternalEObject)ownedRolePkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG, null, msgs);
      if (newOwnedRolePkg != null)
        msgs = ((InternalEObject)newOwnedRolePkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG, null, msgs);
      msgs = basicSetOwnedRolePkg(newOwnedRolePkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG, newOwnedRolePkg, newOwnedRolePkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityPkg getOwnedEntityPkg()
  {
    return ownedEntityPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedEntityPkg(EntityPkg newOwnedEntityPkg, NotificationChain msgs)
  {
    EntityPkg oldOwnedEntityPkg = ownedEntityPkg;
    ownedEntityPkg = newOwnedEntityPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG, oldOwnedEntityPkg, newOwnedEntityPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedEntityPkg(EntityPkg newOwnedEntityPkg)
  {
    if (newOwnedEntityPkg != ownedEntityPkg)
    {
      NotificationChain msgs = null;
      if (ownedEntityPkg != null)
        msgs = ((InternalEObject)ownedEntityPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG, null, msgs);
      if (newOwnedEntityPkg != null)
        msgs = ((InternalEObject)newOwnedEntityPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG, null, msgs);
      msgs = basicSetOwnedEntityPkg(newOwnedEntityPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG, newOwnedEntityPkg, newOwnedEntityPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConceptPkg getOwnedConceptPkg()
  {
    return ownedConceptPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedConceptPkg(ConceptPkg newOwnedConceptPkg, NotificationChain msgs)
  {
    ConceptPkg oldOwnedConceptPkg = ownedConceptPkg;
    ownedConceptPkg = newOwnedConceptPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG, oldOwnedConceptPkg, newOwnedConceptPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedConceptPkg(ConceptPkg newOwnedConceptPkg)
  {
    if (newOwnedConceptPkg != ownedConceptPkg)
    {
      NotificationChain msgs = null;
      if (ownedConceptPkg != null)
        msgs = ((InternalEObject)ownedConceptPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG, null, msgs);
      if (newOwnedConceptPkg != null)
        msgs = ((InternalEObject)newOwnedConceptPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG, null, msgs);
      msgs = basicSetOwnedConceptPkg(newOwnedConceptPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG, newOwnedConceptPkg, newOwnedConceptPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUES:
        return ((InternalEList<?>)getOwnedPropertyValues()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ((InternalEList<?>)getOwnedEnumerationPropertyTypes()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_GROUPS:
        return ((InternalEList<?>)getOwnedPropertyValueGroups()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_TRACES:
        return ((InternalEList<?>)getOwnedTraces()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_PKGS:
        return ((InternalEList<?>)getOwnedPropertyValuePkgs()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG:
        return basicSetOwnedFunctionPkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG:
        return basicSetContainedOperationalCapabilityPkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGES:
        return ((InternalEList<?>)getOwnedComponentExchanges()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return ((InternalEList<?>)getOwnedComponentExchangeCategories()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTIONAL_LINKS:
        return ((InternalEList<?>)getOwnedFunctionalLinks()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_REQUIREMENT_PKGS:
        return ((InternalEList<?>)getOwnedRequirementPkgs()).basicRemove(otherEnd, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG:
        return basicSetContainedOperationalActivityPkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG:
        return basicSetOwnedInterfacePkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG:
        return basicSetOwnedDataPkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG:
        return basicSetOwnedRolePkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG:
        return basicSetOwnedEntityPkg(null, msgs);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG:
        return basicSetOwnedConceptPkg(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__TYPE:
        return getType();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_ID:
        return getArchitectureId();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SID:
        return getSid();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_NAME:
        return getArchitectureName();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_DOC:
        return getVisibleInDoc();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_LM:
        return getVisibleInLM();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SUMMARY:
        return getSummary();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__DESCRIPTION:
        return getDescription();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__REVIEW:
        return getReview();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUES:
        return getAppliedPropertyValues();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUE_GROUPS:
        return getAppliedPropertyValueGroups();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__STATUS:
        return getStatus();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__FEATURES:
        return getFeatures();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUES:
        return getOwnedPropertyValues();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENUMERATION_PROPERTY_TYPES:
        return getOwnedEnumerationPropertyTypes();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_GROUPS:
        return getOwnedPropertyValueGroups();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_TRACES:
        return getOwnedTraces();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_PKGS:
        return getOwnedPropertyValuePkgs();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG:
        return getOwnedFunctionPkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG:
        return getContainedOperationalCapabilityPkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGES:
        return getOwnedComponentExchanges();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return getOwnedComponentExchangeCategories();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTIONAL_LINKS:
        return getOwnedFunctionalLinks();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_REQUIREMENT_PKGS:
        return getOwnedRequirementPkgs();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG:
        return getContainedOperationalActivityPkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG:
        return getOwnedInterfacePkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG:
        return getOwnedDataPkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG:
        return getOwnedRolePkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG:
        return getOwnedEntityPkg();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG:
        return getOwnedConceptPkg();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__TYPE:
        setType((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_ID:
        setArchitectureId((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SID:
        setSid((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_NAME:
        setArchitectureName((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_DOC:
        setVisibleInDoc((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_LM:
        setVisibleInLM((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SUMMARY:
        setSummary((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__REVIEW:
        setReview((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__STATUS:
        setStatus((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__FEATURES:
        setFeatures((String)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        getOwnedPropertyValues().addAll((Collection<? extends AbstractPropertyValue>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        getOwnedEnumerationPropertyTypes().addAll((Collection<? extends EnumerationPropertyType>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        getOwnedPropertyValueGroups().addAll((Collection<? extends PropertyValueGroup>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_TRACES:
        getOwnedTraces().clear();
        getOwnedTraces().addAll((Collection<? extends Trace>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_PKGS:
        getOwnedPropertyValuePkgs().clear();
        getOwnedPropertyValuePkgs().addAll((Collection<? extends PropertyValuePkg>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG:
        setOwnedFunctionPkg((FunctionPkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG:
        setContainedOperationalCapabilityPkg((OperationalActivityPkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGES:
        getOwnedComponentExchanges().clear();
        getOwnedComponentExchanges().addAll((Collection<? extends ComponentExchange>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        getOwnedComponentExchangeCategories().clear();
        getOwnedComponentExchangeCategories().addAll((Collection<? extends ComponentExchangeCategory>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTIONAL_LINKS:
        getOwnedFunctionalLinks().clear();
        getOwnedFunctionalLinks().addAll((Collection<? extends ExchangeLink>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_REQUIREMENT_PKGS:
        getOwnedRequirementPkgs().clear();
        getOwnedRequirementPkgs().addAll((Collection<? extends RequirementsPkg>)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG:
        setContainedOperationalActivityPkg((OperationalCapabilityPkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG:
        setOwnedInterfacePkg((InterfacePkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG:
        setOwnedDataPkg((DataPkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG:
        setOwnedRolePkg((RolePkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG:
        setOwnedEntityPkg((EntityPkg)newValue);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG:
        setOwnedConceptPkg((ConceptPkg)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_ID:
        setArchitectureId(ARCHITECTURE_ID_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SID:
        setSid(SID_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_NAME:
        setArchitectureName(ARCHITECTURE_NAME_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_DOC:
        setVisibleInDoc(VISIBLE_IN_DOC_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_LM:
        setVisibleInLM(VISIBLE_IN_LM_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SUMMARY:
        setSummary(SUMMARY_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__REVIEW:
        setReview(REVIEW_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues(APPLIED_PROPERTY_VALUES_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups(APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__STATUS:
        setStatus(STATUS_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__FEATURES:
        setFeatures(FEATURES_EDEFAULT);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_TRACES:
        getOwnedTraces().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_PKGS:
        getOwnedPropertyValuePkgs().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG:
        setOwnedFunctionPkg((FunctionPkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG:
        setContainedOperationalCapabilityPkg((OperationalActivityPkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGES:
        getOwnedComponentExchanges().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        getOwnedComponentExchangeCategories().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTIONAL_LINKS:
        getOwnedFunctionalLinks().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_REQUIREMENT_PKGS:
        getOwnedRequirementPkgs().clear();
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG:
        setContainedOperationalActivityPkg((OperationalCapabilityPkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG:
        setOwnedInterfacePkg((InterfacePkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG:
        setOwnedDataPkg((DataPkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG:
        setOwnedRolePkg((RolePkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG:
        setOwnedEntityPkg((EntityPkg)null);
        return;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG:
        setOwnedConceptPkg((ConceptPkg)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_ID:
        return ARCHITECTURE_ID_EDEFAULT == null ? architectureId != null : !ARCHITECTURE_ID_EDEFAULT.equals(architectureId);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SID:
        return SID_EDEFAULT == null ? sid != null : !SID_EDEFAULT.equals(sid);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__ARCHITECTURE_NAME:
        return ARCHITECTURE_NAME_EDEFAULT == null ? architectureName != null : !ARCHITECTURE_NAME_EDEFAULT.equals(architectureName);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_DOC:
        return VISIBLE_IN_DOC_EDEFAULT == null ? visibleInDoc != null : !VISIBLE_IN_DOC_EDEFAULT.equals(visibleInDoc);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__VISIBLE_IN_LM:
        return VISIBLE_IN_LM_EDEFAULT == null ? visibleInLM != null : !VISIBLE_IN_LM_EDEFAULT.equals(visibleInLM);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__SUMMARY:
        return SUMMARY_EDEFAULT == null ? summary != null : !SUMMARY_EDEFAULT.equals(summary);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__REVIEW:
        return REVIEW_EDEFAULT == null ? review != null : !REVIEW_EDEFAULT.equals(review);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUES:
        return APPLIED_PROPERTY_VALUES_EDEFAULT == null ? appliedPropertyValues != null : !APPLIED_PROPERTY_VALUES_EDEFAULT.equals(appliedPropertyValues);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__APPLIED_PROPERTY_VALUE_GROUPS:
        return APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT == null ? appliedPropertyValueGroups != null : !APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT.equals(appliedPropertyValueGroups);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__STATUS:
        return STATUS_EDEFAULT == null ? status != null : !STATUS_EDEFAULT.equals(status);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__FEATURES:
        return FEATURES_EDEFAULT == null ? features != null : !FEATURES_EDEFAULT.equals(features);
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUES:
        return ownedPropertyValues != null && !ownedPropertyValues.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ownedEnumerationPropertyTypes != null && !ownedEnumerationPropertyTypes.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_GROUPS:
        return ownedPropertyValueGroups != null && !ownedPropertyValueGroups.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_TRACES:
        return ownedTraces != null && !ownedTraces.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_PROPERTY_VALUE_PKGS:
        return ownedPropertyValuePkgs != null && !ownedPropertyValuePkgs.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTION_PKG:
        return ownedFunctionPkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_CAPABILITY_PKG:
        return containedOperationalCapabilityPkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGES:
        return ownedComponentExchanges != null && !ownedComponentExchanges.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return ownedComponentExchangeCategories != null && !ownedComponentExchangeCategories.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_FUNCTIONAL_LINKS:
        return ownedFunctionalLinks != null && !ownedFunctionalLinks.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_REQUIREMENT_PKGS:
        return ownedRequirementPkgs != null && !ownedRequirementPkgs.isEmpty();
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__CONTAINED_OPERATIONAL_ACTIVITY_PKG:
        return containedOperationalActivityPkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_INTERFACE_PKG:
        return ownedInterfacePkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_DATA_PKG:
        return ownedDataPkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ROLE_PKG:
        return ownedRolePkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_ENTITY_PKG:
        return ownedEntityPkg != null;
      case MyDslnewPackage.OPERATIONAL_ANALYSIS__OWNED_CONCEPT_PKG:
        return ownedConceptPkg != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", architectureId: ");
    result.append(architectureId);
    result.append(", sid: ");
    result.append(sid);
    result.append(", architectureName: ");
    result.append(architectureName);
    result.append(", visibleInDoc: ");
    result.append(visibleInDoc);
    result.append(", visibleInLM: ");
    result.append(visibleInLM);
    result.append(", summary: ");
    result.append(summary);
    result.append(", description: ");
    result.append(description);
    result.append(", review: ");
    result.append(review);
    result.append(", appliedPropertyValues: ");
    result.append(appliedPropertyValues);
    result.append(", appliedPropertyValueGroups: ");
    result.append(appliedPropertyValueGroups);
    result.append(", status: ");
    result.append(status);
    result.append(", features: ");
    result.append(features);
    result.append(')');
    return result.toString();
  }

} //operationalAnalysisImpl
