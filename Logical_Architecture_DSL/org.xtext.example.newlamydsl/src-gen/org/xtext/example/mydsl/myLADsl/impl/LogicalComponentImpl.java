/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.mydsl.myLADsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myLADsl.AbstractPropertyValue;
import org.xtext.example.mydsl.myLADsl.CommunicationLink;
import org.xtext.example.mydsl.myLADsl.ComponentExchange;
import org.xtext.example.mydsl.myLADsl.ComponentExchangeCategory;
import org.xtext.example.mydsl.myLADsl.ComponentFunctionalAllocation;
import org.xtext.example.mydsl.myLADsl.ComponentRealization;
import org.xtext.example.mydsl.myLADsl.Constraint;
import org.xtext.example.mydsl.myLADsl.EnumerationPropertyType;
import org.xtext.example.mydsl.myLADsl.Feature;
import org.xtext.example.mydsl.myLADsl.Generalization;
import org.xtext.example.mydsl.myLADsl.InterfaceAllocation;
import org.xtext.example.mydsl.myLADsl.InterfaceImplementation;
import org.xtext.example.mydsl.myLADsl.InterfaceUse;
import org.xtext.example.mydsl.myLADsl.LogicalComponent;
import org.xtext.example.mydsl.myLADsl.MyLADslPackage;
import org.xtext.example.mydsl.myLADsl.PhysicalLink;
import org.xtext.example.mydsl.myLADsl.PhysicalLinkCategory;
import org.xtext.example.mydsl.myLADsl.PhysicalPath;
import org.xtext.example.mydsl.myLADsl.PropertyValueGroup;
import org.xtext.example.mydsl.myLADsl.StateMachine;
import org.xtext.example.mydsl.myLADsl.Trace;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Logical Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getSid <em>Sid</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getIdType <em>Id Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getVisibleInDoc <em>Visible In Doc</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getVisibleInLM <em>Visible In LM</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getSummary <em>Summary</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getReview <em>Review</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getAppliedPropertyValues <em>Applied Property Values</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getAppliedPropertyValueGroups <em>Applied Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getStatus <em>Status</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getFeatures <em>Features</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getInExchangeLinks <em>In Exchange Links</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOutExchangeLinks <em>Out Exchange Links</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getAbstract <em>Abstract</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getActor <em>Actor</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getHuman <em>Human</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedPropertyValues <em>Owned Property Values</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedEnumerationPropertyTypes <em>Owned Enumeration Property Types</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedPropertyValueGroups <em>Owned Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedContraints <em>Owned Contraints</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedTraces <em>Owned Traces</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedFunctionalAllocation <em>Owned Functional Allocation</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedComponentExchanges <em>Owned Component Exchanges</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedComponentExchangeCategories <em>Owned Component Exchange Categories</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedStateMachines <em>Owned State Machines</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedGeneralizations <em>Owned Generalizations</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedFeatures <em>Owned Features</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedInterfaceAllocations <em>Owned Interface Allocations</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedCommunicationLinks <em>Owned Communication Links</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedInterfaceUses <em>Owned Interface Uses</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedInterfaceImplementations <em>Owned Interface Implementations</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedComponentRealizations <em>Owned Component Realizations</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedPhysicalPath <em>Owned Physical Path</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedPhysicalLinks <em>Owned Physical Links</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedPhysicalLinkCategories <em>Owned Physical Link Categories</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalComponentImpl#getOwnedLogicalComponents <em>Owned Logical Components</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LogicalComponentImpl extends MinimalEObjectImpl.Container implements LogicalComponent
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected static final String SID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected String sid = SID_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getIdType() <em>Id Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdType()
   * @generated
   * @ordered
   */
  protected static final String ID_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdType() <em>Id Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdType()
   * @generated
   * @ordered
   */
  protected String idType = ID_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_DOC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected String visibleInDoc = VISIBLE_IN_DOC_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_LM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected String visibleInLM = VISIBLE_IN_LM_EDEFAULT;

  /**
   * The default value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected static final String SUMMARY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected String summary = SUMMARY_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected static final String REVIEW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected String review = REVIEW_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValues = APPLIED_PROPERTY_VALUES_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValueGroups = APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT;

  /**
   * The default value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected static final String STATUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected String status = STATUS_EDEFAULT;

  /**
   * The default value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected static final String FEATURES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected String features = FEATURES_EDEFAULT;

  /**
   * The default value of the '{@link #getInExchangeLinks() <em>In Exchange Links</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInExchangeLinks()
   * @generated
   * @ordered
   */
  protected static final String IN_EXCHANGE_LINKS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInExchangeLinks() <em>In Exchange Links</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInExchangeLinks()
   * @generated
   * @ordered
   */
  protected String inExchangeLinks = IN_EXCHANGE_LINKS_EDEFAULT;

  /**
   * The default value of the '{@link #getOutExchangeLinks() <em>Out Exchange Links</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutExchangeLinks()
   * @generated
   * @ordered
   */
  protected static final String OUT_EXCHANGE_LINKS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOutExchangeLinks() <em>Out Exchange Links</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutExchangeLinks()
   * @generated
   * @ordered
   */
  protected String outExchangeLinks = OUT_EXCHANGE_LINKS_EDEFAULT;

  /**
   * The default value of the '{@link #getAbstract() <em>Abstract</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstract()
   * @generated
   * @ordered
   */
  protected static final String ABSTRACT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAbstract() <em>Abstract</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstract()
   * @generated
   * @ordered
   */
  protected String abstract_ = ABSTRACT_EDEFAULT;

  /**
   * The default value of the '{@link #getActor() <em>Actor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActor()
   * @generated
   * @ordered
   */
  protected static final String ACTOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getActor() <em>Actor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActor()
   * @generated
   * @ordered
   */
  protected String actor = ACTOR_EDEFAULT;

  /**
   * The default value of the '{@link #getHuman() <em>Human</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHuman()
   * @generated
   * @ordered
   */
  protected static final String HUMAN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHuman() <em>Human</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHuman()
   * @generated
   * @ordered
   */
  protected String human = HUMAN_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedPropertyValues() <em>Owned Property Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValues()
   * @generated
   * @ordered
   */
  protected EList<AbstractPropertyValue> ownedPropertyValues;

  /**
   * The cached value of the '{@link #getOwnedEnumerationPropertyTypes() <em>Owned Enumeration Property Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedEnumerationPropertyTypes()
   * @generated
   * @ordered
   */
  protected EList<EnumerationPropertyType> ownedEnumerationPropertyTypes;

  /**
   * The cached value of the '{@link #getOwnedPropertyValueGroups() <em>Owned Property Value Groups</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected EList<PropertyValueGroup> ownedPropertyValueGroups;

  /**
   * The cached value of the '{@link #getOwnedContraints() <em>Owned Contraints</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedContraints()
   * @generated
   * @ordered
   */
  protected EList<Constraint> ownedContraints;

  /**
   * The cached value of the '{@link #getOwnedTraces() <em>Owned Traces</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedTraces()
   * @generated
   * @ordered
   */
  protected EList<Trace> ownedTraces;

  /**
   * The cached value of the '{@link #getOwnedFunctionalAllocation() <em>Owned Functional Allocation</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFunctionalAllocation()
   * @generated
   * @ordered
   */
  protected EList<ComponentFunctionalAllocation> ownedFunctionalAllocation;

  /**
   * The cached value of the '{@link #getOwnedComponentExchanges() <em>Owned Component Exchanges</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchanges()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchange> ownedComponentExchanges;

  /**
   * The cached value of the '{@link #getOwnedComponentExchangeCategories() <em>Owned Component Exchange Categories</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchangeCategories()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchangeCategory> ownedComponentExchangeCategories;

  /**
   * The cached value of the '{@link #getOwnedStateMachines() <em>Owned State Machines</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedStateMachines()
   * @generated
   * @ordered
   */
  protected EList<StateMachine> ownedStateMachines;

  /**
   * The cached value of the '{@link #getOwnedGeneralizations() <em>Owned Generalizations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedGeneralizations()
   * @generated
   * @ordered
   */
  protected EList<Generalization> ownedGeneralizations;

  /**
   * The cached value of the '{@link #getOwnedFeatures() <em>Owned Features</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFeatures()
   * @generated
   * @ordered
   */
  protected EList<Feature> ownedFeatures;

  /**
   * The cached value of the '{@link #getOwnedInterfaceAllocations() <em>Owned Interface Allocations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedInterfaceAllocations()
   * @generated
   * @ordered
   */
  protected EList<InterfaceAllocation> ownedInterfaceAllocations;

  /**
   * The cached value of the '{@link #getOwnedCommunicationLinks() <em>Owned Communication Links</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedCommunicationLinks()
   * @generated
   * @ordered
   */
  protected EList<CommunicationLink> ownedCommunicationLinks;

  /**
   * The cached value of the '{@link #getOwnedInterfaceUses() <em>Owned Interface Uses</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedInterfaceUses()
   * @generated
   * @ordered
   */
  protected EList<InterfaceUse> ownedInterfaceUses;

  /**
   * The cached value of the '{@link #getOwnedInterfaceImplementations() <em>Owned Interface Implementations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedInterfaceImplementations()
   * @generated
   * @ordered
   */
  protected EList<InterfaceImplementation> ownedInterfaceImplementations;

  /**
   * The cached value of the '{@link #getOwnedComponentRealizations() <em>Owned Component Realizations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentRealizations()
   * @generated
   * @ordered
   */
  protected EList<ComponentRealization> ownedComponentRealizations;

  /**
   * The cached value of the '{@link #getOwnedPhysicalPath() <em>Owned Physical Path</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPhysicalPath()
   * @generated
   * @ordered
   */
  protected EList<PhysicalPath> ownedPhysicalPath;

  /**
   * The cached value of the '{@link #getOwnedPhysicalLinks() <em>Owned Physical Links</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPhysicalLinks()
   * @generated
   * @ordered
   */
  protected EList<PhysicalLink> ownedPhysicalLinks;

  /**
   * The cached value of the '{@link #getOwnedPhysicalLinkCategories() <em>Owned Physical Link Categories</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPhysicalLinkCategories()
   * @generated
   * @ordered
   */
  protected EList<PhysicalLinkCategory> ownedPhysicalLinkCategories;

  /**
   * The cached value of the '{@link #getOwnedLogicalComponents() <em>Owned Logical Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedLogicalComponents()
   * @generated
   * @ordered
   */
  protected EList<LogicalComponent> ownedLogicalComponents;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LogicalComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyLADslPackage.eINSTANCE.getLogicalComponent();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSid()
  {
    return sid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSid(String newSid)
  {
    String oldSid = sid;
    sid = newSid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__SID, oldSid, sid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIdType()
  {
    return idType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdType(String newIdType)
  {
    String oldIdType = idType;
    idType = newIdType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__ID_TYPE, oldIdType, idType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInDoc()
  {
    return visibleInDoc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInDoc(String newVisibleInDoc)
  {
    String oldVisibleInDoc = visibleInDoc;
    visibleInDoc = newVisibleInDoc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_DOC, oldVisibleInDoc, visibleInDoc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInLM()
  {
    return visibleInLM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInLM(String newVisibleInLM)
  {
    String oldVisibleInLM = visibleInLM;
    visibleInLM = newVisibleInLM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_LM, oldVisibleInLM, visibleInLM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSummary()
  {
    return summary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSummary(String newSummary)
  {
    String oldSummary = summary;
    summary = newSummary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__SUMMARY, oldSummary, summary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReview()
  {
    return review;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReview(String newReview)
  {
    String oldReview = review;
    review = newReview;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__REVIEW, oldReview, review));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValues()
  {
    return appliedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValues(String newAppliedPropertyValues)
  {
    String oldAppliedPropertyValues = appliedPropertyValues;
    appliedPropertyValues = newAppliedPropertyValues;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUES, oldAppliedPropertyValues, appliedPropertyValues));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValueGroups()
  {
    return appliedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValueGroups(String newAppliedPropertyValueGroups)
  {
    String oldAppliedPropertyValueGroups = appliedPropertyValueGroups;
    appliedPropertyValueGroups = newAppliedPropertyValueGroups;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUE_GROUPS, oldAppliedPropertyValueGroups, appliedPropertyValueGroups));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStatus()
  {
    return status;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatus(String newStatus)
  {
    String oldStatus = status;
    status = newStatus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__STATUS, oldStatus, status));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFeatures()
  {
    return features;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFeatures(String newFeatures)
  {
    String oldFeatures = features;
    features = newFeatures;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__FEATURES, oldFeatures, features));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInExchangeLinks()
  {
    return inExchangeLinks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInExchangeLinks(String newInExchangeLinks)
  {
    String oldInExchangeLinks = inExchangeLinks;
    inExchangeLinks = newInExchangeLinks;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__IN_EXCHANGE_LINKS, oldInExchangeLinks, inExchangeLinks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOutExchangeLinks()
  {
    return outExchangeLinks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOutExchangeLinks(String newOutExchangeLinks)
  {
    String oldOutExchangeLinks = outExchangeLinks;
    outExchangeLinks = newOutExchangeLinks;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__OUT_EXCHANGE_LINKS, oldOutExchangeLinks, outExchangeLinks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAbstract()
  {
    return abstract_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAbstract(String newAbstract)
  {
    String oldAbstract = abstract_;
    abstract_ = newAbstract;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__ABSTRACT, oldAbstract, abstract_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getActor()
  {
    return actor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActor(String newActor)
  {
    String oldActor = actor;
    actor = newActor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__ACTOR, oldActor, actor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHuman()
  {
    return human;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHuman(String newHuman)
  {
    String oldHuman = human;
    human = newHuman;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_COMPONENT__HUMAN, oldHuman, human));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractPropertyValue> getOwnedPropertyValues()
  {
    if (ownedPropertyValues == null)
    {
      ownedPropertyValues = new EObjectContainmentEList<AbstractPropertyValue>(AbstractPropertyValue.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUES);
    }
    return ownedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EnumerationPropertyType> getOwnedEnumerationPropertyTypes()
  {
    if (ownedEnumerationPropertyTypes == null)
    {
      ownedEnumerationPropertyTypes = new EObjectContainmentEList<EnumerationPropertyType>(EnumerationPropertyType.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_ENUMERATION_PROPERTY_TYPES);
    }
    return ownedEnumerationPropertyTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PropertyValueGroup> getOwnedPropertyValueGroups()
  {
    if (ownedPropertyValueGroups == null)
    {
      ownedPropertyValueGroups = new EObjectContainmentEList<PropertyValueGroup>(PropertyValueGroup.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUE_GROUPS);
    }
    return ownedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Constraint> getOwnedContraints()
  {
    if (ownedContraints == null)
    {
      ownedContraints = new EObjectContainmentEList<Constraint>(Constraint.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_CONTRAINTS);
    }
    return ownedContraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Trace> getOwnedTraces()
  {
    if (ownedTraces == null)
    {
      ownedTraces = new EObjectContainmentEList<Trace>(Trace.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_TRACES);
    }
    return ownedTraces;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentFunctionalAllocation> getOwnedFunctionalAllocation()
  {
    if (ownedFunctionalAllocation == null)
    {
      ownedFunctionalAllocation = new EObjectContainmentEList<ComponentFunctionalAllocation>(ComponentFunctionalAllocation.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_FUNCTIONAL_ALLOCATION);
    }
    return ownedFunctionalAllocation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchange> getOwnedComponentExchanges()
  {
    if (ownedComponentExchanges == null)
    {
      ownedComponentExchanges = new EObjectContainmentEList<ComponentExchange>(ComponentExchange.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGES);
    }
    return ownedComponentExchanges;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchangeCategory> getOwnedComponentExchangeCategories()
  {
    if (ownedComponentExchangeCategories == null)
    {
      ownedComponentExchangeCategories = new EObjectContainmentEList<ComponentExchangeCategory>(ComponentExchangeCategory.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGE_CATEGORIES);
    }
    return ownedComponentExchangeCategories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateMachine> getOwnedStateMachines()
  {
    if (ownedStateMachines == null)
    {
      ownedStateMachines = new EObjectContainmentEList<StateMachine>(StateMachine.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_STATE_MACHINES);
    }
    return ownedStateMachines;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Generalization> getOwnedGeneralizations()
  {
    if (ownedGeneralizations == null)
    {
      ownedGeneralizations = new EObjectContainmentEList<Generalization>(Generalization.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_GENERALIZATIONS);
    }
    return ownedGeneralizations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Feature> getOwnedFeatures()
  {
    if (ownedFeatures == null)
    {
      ownedFeatures = new EObjectContainmentEList<Feature>(Feature.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_FEATURES);
    }
    return ownedFeatures;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InterfaceAllocation> getOwnedInterfaceAllocations()
  {
    if (ownedInterfaceAllocations == null)
    {
      ownedInterfaceAllocations = new EObjectContainmentEList<InterfaceAllocation>(InterfaceAllocation.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_ALLOCATIONS);
    }
    return ownedInterfaceAllocations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CommunicationLink> getOwnedCommunicationLinks()
  {
    if (ownedCommunicationLinks == null)
    {
      ownedCommunicationLinks = new EObjectContainmentEList<CommunicationLink>(CommunicationLink.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMMUNICATION_LINKS);
    }
    return ownedCommunicationLinks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InterfaceUse> getOwnedInterfaceUses()
  {
    if (ownedInterfaceUses == null)
    {
      ownedInterfaceUses = new EObjectContainmentEList<InterfaceUse>(InterfaceUse.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_USES);
    }
    return ownedInterfaceUses;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InterfaceImplementation> getOwnedInterfaceImplementations()
  {
    if (ownedInterfaceImplementations == null)
    {
      ownedInterfaceImplementations = new EObjectContainmentEList<InterfaceImplementation>(InterfaceImplementation.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_IMPLEMENTATIONS);
    }
    return ownedInterfaceImplementations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentRealization> getOwnedComponentRealizations()
  {
    if (ownedComponentRealizations == null)
    {
      ownedComponentRealizations = new EObjectContainmentEList<ComponentRealization>(ComponentRealization.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_REALIZATIONS);
    }
    return ownedComponentRealizations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PhysicalPath> getOwnedPhysicalPath()
  {
    if (ownedPhysicalPath == null)
    {
      ownedPhysicalPath = new EObjectContainmentEList<PhysicalPath>(PhysicalPath.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_PATH);
    }
    return ownedPhysicalPath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PhysicalLink> getOwnedPhysicalLinks()
  {
    if (ownedPhysicalLinks == null)
    {
      ownedPhysicalLinks = new EObjectContainmentEList<PhysicalLink>(PhysicalLink.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINKS);
    }
    return ownedPhysicalLinks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PhysicalLinkCategory> getOwnedPhysicalLinkCategories()
  {
    if (ownedPhysicalLinkCategories == null)
    {
      ownedPhysicalLinkCategories = new EObjectContainmentEList<PhysicalLinkCategory>(PhysicalLinkCategory.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINK_CATEGORIES);
    }
    return ownedPhysicalLinkCategories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LogicalComponent> getOwnedLogicalComponents()
  {
    if (ownedLogicalComponents == null)
    {
      ownedLogicalComponents = new EObjectContainmentEList<LogicalComponent>(LogicalComponent.class, this, MyLADslPackage.LOGICAL_COMPONENT__OWNED_LOGICAL_COMPONENTS);
    }
    return ownedLogicalComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUES:
        return ((InternalEList<?>)getOwnedPropertyValues()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ((InternalEList<?>)getOwnedEnumerationPropertyTypes()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUE_GROUPS:
        return ((InternalEList<?>)getOwnedPropertyValueGroups()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_CONTRAINTS:
        return ((InternalEList<?>)getOwnedContraints()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_TRACES:
        return ((InternalEList<?>)getOwnedTraces()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FUNCTIONAL_ALLOCATION:
        return ((InternalEList<?>)getOwnedFunctionalAllocation()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGES:
        return ((InternalEList<?>)getOwnedComponentExchanges()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return ((InternalEList<?>)getOwnedComponentExchangeCategories()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_STATE_MACHINES:
        return ((InternalEList<?>)getOwnedStateMachines()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_GENERALIZATIONS:
        return ((InternalEList<?>)getOwnedGeneralizations()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FEATURES:
        return ((InternalEList<?>)getOwnedFeatures()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_ALLOCATIONS:
        return ((InternalEList<?>)getOwnedInterfaceAllocations()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMMUNICATION_LINKS:
        return ((InternalEList<?>)getOwnedCommunicationLinks()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_USES:
        return ((InternalEList<?>)getOwnedInterfaceUses()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_IMPLEMENTATIONS:
        return ((InternalEList<?>)getOwnedInterfaceImplementations()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_REALIZATIONS:
        return ((InternalEList<?>)getOwnedComponentRealizations()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_PATH:
        return ((InternalEList<?>)getOwnedPhysicalPath()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINKS:
        return ((InternalEList<?>)getOwnedPhysicalLinks()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINK_CATEGORIES:
        return ((InternalEList<?>)getOwnedPhysicalLinkCategories()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_LOGICAL_COMPONENTS:
        return ((InternalEList<?>)getOwnedLogicalComponents()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_COMPONENT__TYPE:
        return getType();
      case MyLADslPackage.LOGICAL_COMPONENT__ID:
        return getId();
      case MyLADslPackage.LOGICAL_COMPONENT__SID:
        return getSid();
      case MyLADslPackage.LOGICAL_COMPONENT__NAME:
        return getName();
      case MyLADslPackage.LOGICAL_COMPONENT__ID_TYPE:
        return getIdType();
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_DOC:
        return getVisibleInDoc();
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_LM:
        return getVisibleInLM();
      case MyLADslPackage.LOGICAL_COMPONENT__SUMMARY:
        return getSummary();
      case MyLADslPackage.LOGICAL_COMPONENT__DESCRIPTION:
        return getDescription();
      case MyLADslPackage.LOGICAL_COMPONENT__REVIEW:
        return getReview();
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUES:
        return getAppliedPropertyValues();
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUE_GROUPS:
        return getAppliedPropertyValueGroups();
      case MyLADslPackage.LOGICAL_COMPONENT__STATUS:
        return getStatus();
      case MyLADslPackage.LOGICAL_COMPONENT__FEATURES:
        return getFeatures();
      case MyLADslPackage.LOGICAL_COMPONENT__IN_EXCHANGE_LINKS:
        return getInExchangeLinks();
      case MyLADslPackage.LOGICAL_COMPONENT__OUT_EXCHANGE_LINKS:
        return getOutExchangeLinks();
      case MyLADslPackage.LOGICAL_COMPONENT__ABSTRACT:
        return getAbstract();
      case MyLADslPackage.LOGICAL_COMPONENT__ACTOR:
        return getActor();
      case MyLADslPackage.LOGICAL_COMPONENT__HUMAN:
        return getHuman();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUES:
        return getOwnedPropertyValues();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_ENUMERATION_PROPERTY_TYPES:
        return getOwnedEnumerationPropertyTypes();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUE_GROUPS:
        return getOwnedPropertyValueGroups();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_CONTRAINTS:
        return getOwnedContraints();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_TRACES:
        return getOwnedTraces();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FUNCTIONAL_ALLOCATION:
        return getOwnedFunctionalAllocation();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGES:
        return getOwnedComponentExchanges();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return getOwnedComponentExchangeCategories();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_STATE_MACHINES:
        return getOwnedStateMachines();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_GENERALIZATIONS:
        return getOwnedGeneralizations();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FEATURES:
        return getOwnedFeatures();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_ALLOCATIONS:
        return getOwnedInterfaceAllocations();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMMUNICATION_LINKS:
        return getOwnedCommunicationLinks();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_USES:
        return getOwnedInterfaceUses();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_IMPLEMENTATIONS:
        return getOwnedInterfaceImplementations();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_REALIZATIONS:
        return getOwnedComponentRealizations();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_PATH:
        return getOwnedPhysicalPath();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINKS:
        return getOwnedPhysicalLinks();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINK_CATEGORIES:
        return getOwnedPhysicalLinkCategories();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_LOGICAL_COMPONENTS:
        return getOwnedLogicalComponents();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_COMPONENT__TYPE:
        setType((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ID:
        setId((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__SID:
        setSid((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__NAME:
        setName((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ID_TYPE:
        setIdType((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_DOC:
        setVisibleInDoc((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_LM:
        setVisibleInLM((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__SUMMARY:
        setSummary((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__REVIEW:
        setReview((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__STATUS:
        setStatus((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__FEATURES:
        setFeatures((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__IN_EXCHANGE_LINKS:
        setInExchangeLinks((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OUT_EXCHANGE_LINKS:
        setOutExchangeLinks((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ABSTRACT:
        setAbstract((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ACTOR:
        setActor((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__HUMAN:
        setHuman((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        getOwnedPropertyValues().addAll((Collection<? extends AbstractPropertyValue>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        getOwnedEnumerationPropertyTypes().addAll((Collection<? extends EnumerationPropertyType>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        getOwnedPropertyValueGroups().addAll((Collection<? extends PropertyValueGroup>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_CONTRAINTS:
        getOwnedContraints().clear();
        getOwnedContraints().addAll((Collection<? extends Constraint>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_TRACES:
        getOwnedTraces().clear();
        getOwnedTraces().addAll((Collection<? extends Trace>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FUNCTIONAL_ALLOCATION:
        getOwnedFunctionalAllocation().clear();
        getOwnedFunctionalAllocation().addAll((Collection<? extends ComponentFunctionalAllocation>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGES:
        getOwnedComponentExchanges().clear();
        getOwnedComponentExchanges().addAll((Collection<? extends ComponentExchange>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        getOwnedComponentExchangeCategories().clear();
        getOwnedComponentExchangeCategories().addAll((Collection<? extends ComponentExchangeCategory>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_STATE_MACHINES:
        getOwnedStateMachines().clear();
        getOwnedStateMachines().addAll((Collection<? extends StateMachine>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_GENERALIZATIONS:
        getOwnedGeneralizations().clear();
        getOwnedGeneralizations().addAll((Collection<? extends Generalization>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FEATURES:
        getOwnedFeatures().clear();
        getOwnedFeatures().addAll((Collection<? extends Feature>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_ALLOCATIONS:
        getOwnedInterfaceAllocations().clear();
        getOwnedInterfaceAllocations().addAll((Collection<? extends InterfaceAllocation>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMMUNICATION_LINKS:
        getOwnedCommunicationLinks().clear();
        getOwnedCommunicationLinks().addAll((Collection<? extends CommunicationLink>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_USES:
        getOwnedInterfaceUses().clear();
        getOwnedInterfaceUses().addAll((Collection<? extends InterfaceUse>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_IMPLEMENTATIONS:
        getOwnedInterfaceImplementations().clear();
        getOwnedInterfaceImplementations().addAll((Collection<? extends InterfaceImplementation>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_REALIZATIONS:
        getOwnedComponentRealizations().clear();
        getOwnedComponentRealizations().addAll((Collection<? extends ComponentRealization>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_PATH:
        getOwnedPhysicalPath().clear();
        getOwnedPhysicalPath().addAll((Collection<? extends PhysicalPath>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINKS:
        getOwnedPhysicalLinks().clear();
        getOwnedPhysicalLinks().addAll((Collection<? extends PhysicalLink>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINK_CATEGORIES:
        getOwnedPhysicalLinkCategories().clear();
        getOwnedPhysicalLinkCategories().addAll((Collection<? extends PhysicalLinkCategory>)newValue);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_LOGICAL_COMPONENTS:
        getOwnedLogicalComponents().clear();
        getOwnedLogicalComponents().addAll((Collection<? extends LogicalComponent>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_COMPONENT__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ID:
        setId(ID_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__SID:
        setSid(SID_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ID_TYPE:
        setIdType(ID_TYPE_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_DOC:
        setVisibleInDoc(VISIBLE_IN_DOC_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_LM:
        setVisibleInLM(VISIBLE_IN_LM_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__SUMMARY:
        setSummary(SUMMARY_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__REVIEW:
        setReview(REVIEW_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues(APPLIED_PROPERTY_VALUES_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups(APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__STATUS:
        setStatus(STATUS_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__FEATURES:
        setFeatures(FEATURES_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__IN_EXCHANGE_LINKS:
        setInExchangeLinks(IN_EXCHANGE_LINKS_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OUT_EXCHANGE_LINKS:
        setOutExchangeLinks(OUT_EXCHANGE_LINKS_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ABSTRACT:
        setAbstract(ABSTRACT_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__ACTOR:
        setActor(ACTOR_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__HUMAN:
        setHuman(HUMAN_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_CONTRAINTS:
        getOwnedContraints().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_TRACES:
        getOwnedTraces().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FUNCTIONAL_ALLOCATION:
        getOwnedFunctionalAllocation().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGES:
        getOwnedComponentExchanges().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        getOwnedComponentExchangeCategories().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_STATE_MACHINES:
        getOwnedStateMachines().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_GENERALIZATIONS:
        getOwnedGeneralizations().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FEATURES:
        getOwnedFeatures().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_ALLOCATIONS:
        getOwnedInterfaceAllocations().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMMUNICATION_LINKS:
        getOwnedCommunicationLinks().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_USES:
        getOwnedInterfaceUses().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_IMPLEMENTATIONS:
        getOwnedInterfaceImplementations().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_REALIZATIONS:
        getOwnedComponentRealizations().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_PATH:
        getOwnedPhysicalPath().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINKS:
        getOwnedPhysicalLinks().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINK_CATEGORIES:
        getOwnedPhysicalLinkCategories().clear();
        return;
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_LOGICAL_COMPONENTS:
        getOwnedLogicalComponents().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_COMPONENT__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MyLADslPackage.LOGICAL_COMPONENT__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MyLADslPackage.LOGICAL_COMPONENT__SID:
        return SID_EDEFAULT == null ? sid != null : !SID_EDEFAULT.equals(sid);
      case MyLADslPackage.LOGICAL_COMPONENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyLADslPackage.LOGICAL_COMPONENT__ID_TYPE:
        return ID_TYPE_EDEFAULT == null ? idType != null : !ID_TYPE_EDEFAULT.equals(idType);
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_DOC:
        return VISIBLE_IN_DOC_EDEFAULT == null ? visibleInDoc != null : !VISIBLE_IN_DOC_EDEFAULT.equals(visibleInDoc);
      case MyLADslPackage.LOGICAL_COMPONENT__VISIBLE_IN_LM:
        return VISIBLE_IN_LM_EDEFAULT == null ? visibleInLM != null : !VISIBLE_IN_LM_EDEFAULT.equals(visibleInLM);
      case MyLADslPackage.LOGICAL_COMPONENT__SUMMARY:
        return SUMMARY_EDEFAULT == null ? summary != null : !SUMMARY_EDEFAULT.equals(summary);
      case MyLADslPackage.LOGICAL_COMPONENT__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MyLADslPackage.LOGICAL_COMPONENT__REVIEW:
        return REVIEW_EDEFAULT == null ? review != null : !REVIEW_EDEFAULT.equals(review);
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUES:
        return APPLIED_PROPERTY_VALUES_EDEFAULT == null ? appliedPropertyValues != null : !APPLIED_PROPERTY_VALUES_EDEFAULT.equals(appliedPropertyValues);
      case MyLADslPackage.LOGICAL_COMPONENT__APPLIED_PROPERTY_VALUE_GROUPS:
        return APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT == null ? appliedPropertyValueGroups != null : !APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT.equals(appliedPropertyValueGroups);
      case MyLADslPackage.LOGICAL_COMPONENT__STATUS:
        return STATUS_EDEFAULT == null ? status != null : !STATUS_EDEFAULT.equals(status);
      case MyLADslPackage.LOGICAL_COMPONENT__FEATURES:
        return FEATURES_EDEFAULT == null ? features != null : !FEATURES_EDEFAULT.equals(features);
      case MyLADslPackage.LOGICAL_COMPONENT__IN_EXCHANGE_LINKS:
        return IN_EXCHANGE_LINKS_EDEFAULT == null ? inExchangeLinks != null : !IN_EXCHANGE_LINKS_EDEFAULT.equals(inExchangeLinks);
      case MyLADslPackage.LOGICAL_COMPONENT__OUT_EXCHANGE_LINKS:
        return OUT_EXCHANGE_LINKS_EDEFAULT == null ? outExchangeLinks != null : !OUT_EXCHANGE_LINKS_EDEFAULT.equals(outExchangeLinks);
      case MyLADslPackage.LOGICAL_COMPONENT__ABSTRACT:
        return ABSTRACT_EDEFAULT == null ? abstract_ != null : !ABSTRACT_EDEFAULT.equals(abstract_);
      case MyLADslPackage.LOGICAL_COMPONENT__ACTOR:
        return ACTOR_EDEFAULT == null ? actor != null : !ACTOR_EDEFAULT.equals(actor);
      case MyLADslPackage.LOGICAL_COMPONENT__HUMAN:
        return HUMAN_EDEFAULT == null ? human != null : !HUMAN_EDEFAULT.equals(human);
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUES:
        return ownedPropertyValues != null && !ownedPropertyValues.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ownedEnumerationPropertyTypes != null && !ownedEnumerationPropertyTypes.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PROPERTY_VALUE_GROUPS:
        return ownedPropertyValueGroups != null && !ownedPropertyValueGroups.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_CONTRAINTS:
        return ownedContraints != null && !ownedContraints.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_TRACES:
        return ownedTraces != null && !ownedTraces.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FUNCTIONAL_ALLOCATION:
        return ownedFunctionalAllocation != null && !ownedFunctionalAllocation.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGES:
        return ownedComponentExchanges != null && !ownedComponentExchanges.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return ownedComponentExchangeCategories != null && !ownedComponentExchangeCategories.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_STATE_MACHINES:
        return ownedStateMachines != null && !ownedStateMachines.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_GENERALIZATIONS:
        return ownedGeneralizations != null && !ownedGeneralizations.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_FEATURES:
        return ownedFeatures != null && !ownedFeatures.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_ALLOCATIONS:
        return ownedInterfaceAllocations != null && !ownedInterfaceAllocations.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMMUNICATION_LINKS:
        return ownedCommunicationLinks != null && !ownedCommunicationLinks.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_USES:
        return ownedInterfaceUses != null && !ownedInterfaceUses.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_INTERFACE_IMPLEMENTATIONS:
        return ownedInterfaceImplementations != null && !ownedInterfaceImplementations.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_COMPONENT_REALIZATIONS:
        return ownedComponentRealizations != null && !ownedComponentRealizations.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_PATH:
        return ownedPhysicalPath != null && !ownedPhysicalPath.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINKS:
        return ownedPhysicalLinks != null && !ownedPhysicalLinks.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_PHYSICAL_LINK_CATEGORIES:
        return ownedPhysicalLinkCategories != null && !ownedPhysicalLinkCategories.isEmpty();
      case MyLADslPackage.LOGICAL_COMPONENT__OWNED_LOGICAL_COMPONENTS:
        return ownedLogicalComponents != null && !ownedLogicalComponents.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", id: ");
    result.append(id);
    result.append(", sid: ");
    result.append(sid);
    result.append(", name: ");
    result.append(name);
    result.append(", idType: ");
    result.append(idType);
    result.append(", visibleInDoc: ");
    result.append(visibleInDoc);
    result.append(", visibleInLM: ");
    result.append(visibleInLM);
    result.append(", summary: ");
    result.append(summary);
    result.append(", description: ");
    result.append(description);
    result.append(", review: ");
    result.append(review);
    result.append(", appliedPropertyValues: ");
    result.append(appliedPropertyValues);
    result.append(", appliedPropertyValueGroups: ");
    result.append(appliedPropertyValueGroups);
    result.append(", status: ");
    result.append(status);
    result.append(", features: ");
    result.append(features);
    result.append(", inExchangeLinks: ");
    result.append(inExchangeLinks);
    result.append(", outExchangeLinks: ");
    result.append(outExchangeLinks);
    result.append(", abstract: ");
    result.append(abstract_);
    result.append(", actor: ");
    result.append(actor);
    result.append(", human: ");
    result.append(human);
    result.append(')');
    return result.toString();
  }

} //LogicalComponentImpl
