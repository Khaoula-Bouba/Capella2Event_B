/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.mydsl.myLADsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myLADsl.AbstractPropertyValue;
import org.xtext.example.mydsl.myLADsl.EnumerationPropertyType;
import org.xtext.example.mydsl.myLADsl.FunctionalExchange;
import org.xtext.example.mydsl.myLADsl.FunctionalExchangeRealization;
import org.xtext.example.mydsl.myLADsl.MyLADslPackage;
import org.xtext.example.mydsl.myLADsl.PropertyValueGroup;
import org.xtext.example.mydsl.myLADsl.ValueSpecification;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Functional Exchange</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getSid <em>Sid</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getVisibleInDoc <em>Visible In Doc</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getVisibleInLM <em>Visible In LM</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getSummary <em>Summary</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getReview <em>Review</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getKindOfRate <em>Kind Of Rate</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getAppliedPropertyValues <em>Applied Property Values</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getAppliedPropertyValueGroups <em>Applied Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getStatus <em>Status</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getFeatures <em>Features</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getRealizedFlow <em>Realized Flow</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getSource <em>Source</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getInterrupts <em>Interrupts</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getTransformation <em>Transformation</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getSelection <em>Selection</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getExchangeSpecifications <em>Exchange Specifications</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getExchangedItems <em>Exchanged Items</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getIsMulticast <em>Is Multicast</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getIsMultireceive <em>Is Multireceive</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getOwnedPropertyValues <em>Owned Property Values</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getOwnedEnumerationPropertyTypes <em>Owned Enumeration Property Types</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getOwnedPropertyValueGroups <em>Owned Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getRate <em>Rate</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getProbability <em>Probability</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getGuard <em>Guard</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getWeight <em>Weight</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.FunctionalExchangeImpl#getOwnedFunctionalExchangeRealizations <em>Owned Functional Exchange Realizations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionalExchangeImpl extends MinimalEObjectImpl.Container implements FunctionalExchange
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected static final String SID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected String sid = SID_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_DOC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected String visibleInDoc = VISIBLE_IN_DOC_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_LM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected String visibleInLM = VISIBLE_IN_LM_EDEFAULT;

  /**
   * The default value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected static final String SUMMARY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected String summary = SUMMARY_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected static final String REVIEW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected String review = REVIEW_EDEFAULT;

  /**
   * The default value of the '{@link #getKindOfRate() <em>Kind Of Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKindOfRate()
   * @generated
   * @ordered
   */
  protected static final String KIND_OF_RATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKindOfRate() <em>Kind Of Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKindOfRate()
   * @generated
   * @ordered
   */
  protected String kindOfRate = KIND_OF_RATE_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValues = APPLIED_PROPERTY_VALUES_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValueGroups = APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT;

  /**
   * The default value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected static final String STATUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected String status = STATUS_EDEFAULT;

  /**
   * The default value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected static final String FEATURES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected String features = FEATURES_EDEFAULT;

  /**
   * The default value of the '{@link #getRealizedFlow() <em>Realized Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRealizedFlow()
   * @generated
   * @ordered
   */
  protected static final String REALIZED_FLOW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRealizedFlow() <em>Realized Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRealizedFlow()
   * @generated
   * @ordered
   */
  protected String realizedFlow = REALIZED_FLOW_EDEFAULT;

  /**
   * The default value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected static final String TARGET_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected String target = TARGET_EDEFAULT;

  /**
   * The default value of the '{@link #getSource() <em>Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected static final String SOURCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected String source = SOURCE_EDEFAULT;

  /**
   * The default value of the '{@link #getInterrupts() <em>Interrupts</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterrupts()
   * @generated
   * @ordered
   */
  protected static final String INTERRUPTS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInterrupts() <em>Interrupts</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterrupts()
   * @generated
   * @ordered
   */
  protected String interrupts = INTERRUPTS_EDEFAULT;

  /**
   * The default value of the '{@link #getTransformation() <em>Transformation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransformation()
   * @generated
   * @ordered
   */
  protected static final String TRANSFORMATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTransformation() <em>Transformation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransformation()
   * @generated
   * @ordered
   */
  protected String transformation = TRANSFORMATION_EDEFAULT;

  /**
   * The default value of the '{@link #getSelection() <em>Selection</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelection()
   * @generated
   * @ordered
   */
  protected static final String SELECTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSelection() <em>Selection</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelection()
   * @generated
   * @ordered
   */
  protected String selection = SELECTION_EDEFAULT;

  /**
   * The default value of the '{@link #getExchangeSpecifications() <em>Exchange Specifications</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExchangeSpecifications()
   * @generated
   * @ordered
   */
  protected static final String EXCHANGE_SPECIFICATIONS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExchangeSpecifications() <em>Exchange Specifications</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExchangeSpecifications()
   * @generated
   * @ordered
   */
  protected String exchangeSpecifications = EXCHANGE_SPECIFICATIONS_EDEFAULT;

  /**
   * The default value of the '{@link #getExchangedItems() <em>Exchanged Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExchangedItems()
   * @generated
   * @ordered
   */
  protected static final String EXCHANGED_ITEMS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExchangedItems() <em>Exchanged Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExchangedItems()
   * @generated
   * @ordered
   */
  protected String exchangedItems = EXCHANGED_ITEMS_EDEFAULT;

  /**
   * The default value of the '{@link #getIsMulticast() <em>Is Multicast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMulticast()
   * @generated
   * @ordered
   */
  protected static final String IS_MULTICAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIsMulticast() <em>Is Multicast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMulticast()
   * @generated
   * @ordered
   */
  protected String isMulticast = IS_MULTICAST_EDEFAULT;

  /**
   * The default value of the '{@link #getIsMultireceive() <em>Is Multireceive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMultireceive()
   * @generated
   * @ordered
   */
  protected static final String IS_MULTIRECEIVE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIsMultireceive() <em>Is Multireceive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMultireceive()
   * @generated
   * @ordered
   */
  protected String isMultireceive = IS_MULTIRECEIVE_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedPropertyValues() <em>Owned Property Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValues()
   * @generated
   * @ordered
   */
  protected EList<AbstractPropertyValue> ownedPropertyValues;

  /**
   * The cached value of the '{@link #getOwnedEnumerationPropertyTypes() <em>Owned Enumeration Property Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedEnumerationPropertyTypes()
   * @generated
   * @ordered
   */
  protected EList<EnumerationPropertyType> ownedEnumerationPropertyTypes;

  /**
   * The cached value of the '{@link #getOwnedPropertyValueGroups() <em>Owned Property Value Groups</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected EList<PropertyValueGroup> ownedPropertyValueGroups;

  /**
   * The cached value of the '{@link #getRate() <em>Rate</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRate()
   * @generated
   * @ordered
   */
  protected ValueSpecification rate;

  /**
   * The cached value of the '{@link #getProbability() <em>Probability</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbability()
   * @generated
   * @ordered
   */
  protected ValueSpecification probability;

  /**
   * The cached value of the '{@link #getGuard() <em>Guard</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuard()
   * @generated
   * @ordered
   */
  protected ValueSpecification guard;

  /**
   * The cached value of the '{@link #getWeight() <em>Weight</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected ValueSpecification weight;

  /**
   * The cached value of the '{@link #getOwnedFunctionalExchangeRealizations() <em>Owned Functional Exchange Realizations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFunctionalExchangeRealizations()
   * @generated
   * @ordered
   */
  protected EList<FunctionalExchangeRealization> ownedFunctionalExchangeRealizations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionalExchangeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyLADslPackage.eINSTANCE.getFunctionalExchange();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSid()
  {
    return sid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSid(String newSid)
  {
    String oldSid = sid;
    sid = newSid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__SID, oldSid, sid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInDoc()
  {
    return visibleInDoc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInDoc(String newVisibleInDoc)
  {
    String oldVisibleInDoc = visibleInDoc;
    visibleInDoc = newVisibleInDoc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_DOC, oldVisibleInDoc, visibleInDoc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInLM()
  {
    return visibleInLM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInLM(String newVisibleInLM)
  {
    String oldVisibleInLM = visibleInLM;
    visibleInLM = newVisibleInLM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_LM, oldVisibleInLM, visibleInLM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSummary()
  {
    return summary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSummary(String newSummary)
  {
    String oldSummary = summary;
    summary = newSummary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__SUMMARY, oldSummary, summary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReview()
  {
    return review;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReview(String newReview)
  {
    String oldReview = review;
    review = newReview;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__REVIEW, oldReview, review));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKindOfRate()
  {
    return kindOfRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKindOfRate(String newKindOfRate)
  {
    String oldKindOfRate = kindOfRate;
    kindOfRate = newKindOfRate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__KIND_OF_RATE, oldKindOfRate, kindOfRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValues()
  {
    return appliedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValues(String newAppliedPropertyValues)
  {
    String oldAppliedPropertyValues = appliedPropertyValues;
    appliedPropertyValues = newAppliedPropertyValues;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUES, oldAppliedPropertyValues, appliedPropertyValues));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValueGroups()
  {
    return appliedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValueGroups(String newAppliedPropertyValueGroups)
  {
    String oldAppliedPropertyValueGroups = appliedPropertyValueGroups;
    appliedPropertyValueGroups = newAppliedPropertyValueGroups;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUE_GROUPS, oldAppliedPropertyValueGroups, appliedPropertyValueGroups));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStatus()
  {
    return status;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatus(String newStatus)
  {
    String oldStatus = status;
    status = newStatus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__STATUS, oldStatus, status));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFeatures()
  {
    return features;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFeatures(String newFeatures)
  {
    String oldFeatures = features;
    features = newFeatures;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__FEATURES, oldFeatures, features));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRealizedFlow()
  {
    return realizedFlow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRealizedFlow(String newRealizedFlow)
  {
    String oldRealizedFlow = realizedFlow;
    realizedFlow = newRealizedFlow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__REALIZED_FLOW, oldRealizedFlow, realizedFlow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget(String newTarget)
  {
    String oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSource(String newSource)
  {
    String oldSource = source;
    source = newSource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__SOURCE, oldSource, source));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInterrupts()
  {
    return interrupts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInterrupts(String newInterrupts)
  {
    String oldInterrupts = interrupts;
    interrupts = newInterrupts;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__INTERRUPTS, oldInterrupts, interrupts));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTransformation()
  {
    return transformation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTransformation(String newTransformation)
  {
    String oldTransformation = transformation;
    transformation = newTransformation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__TRANSFORMATION, oldTransformation, transformation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSelection()
  {
    return selection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSelection(String newSelection)
  {
    String oldSelection = selection;
    selection = newSelection;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__SELECTION, oldSelection, selection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExchangeSpecifications()
  {
    return exchangeSpecifications;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExchangeSpecifications(String newExchangeSpecifications)
  {
    String oldExchangeSpecifications = exchangeSpecifications;
    exchangeSpecifications = newExchangeSpecifications;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGE_SPECIFICATIONS, oldExchangeSpecifications, exchangeSpecifications));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExchangedItems()
  {
    return exchangedItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExchangedItems(String newExchangedItems)
  {
    String oldExchangedItems = exchangedItems;
    exchangedItems = newExchangedItems;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGED_ITEMS, oldExchangedItems, exchangedItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIsMulticast()
  {
    return isMulticast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsMulticast(String newIsMulticast)
  {
    String oldIsMulticast = isMulticast;
    isMulticast = newIsMulticast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTICAST, oldIsMulticast, isMulticast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIsMultireceive()
  {
    return isMultireceive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsMultireceive(String newIsMultireceive)
  {
    String oldIsMultireceive = isMultireceive;
    isMultireceive = newIsMultireceive;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTIRECEIVE, oldIsMultireceive, isMultireceive));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractPropertyValue> getOwnedPropertyValues()
  {
    if (ownedPropertyValues == null)
    {
      ownedPropertyValues = new EObjectContainmentEList<AbstractPropertyValue>(AbstractPropertyValue.class, this, MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUES);
    }
    return ownedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EnumerationPropertyType> getOwnedEnumerationPropertyTypes()
  {
    if (ownedEnumerationPropertyTypes == null)
    {
      ownedEnumerationPropertyTypes = new EObjectContainmentEList<EnumerationPropertyType>(EnumerationPropertyType.class, this, MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_ENUMERATION_PROPERTY_TYPES);
    }
    return ownedEnumerationPropertyTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PropertyValueGroup> getOwnedPropertyValueGroups()
  {
    if (ownedPropertyValueGroups == null)
    {
      ownedPropertyValueGroups = new EObjectContainmentEList<PropertyValueGroup>(PropertyValueGroup.class, this, MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUE_GROUPS);
    }
    return ownedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueSpecification getRate()
  {
    return rate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRate(ValueSpecification newRate, NotificationChain msgs)
  {
    ValueSpecification oldRate = rate;
    rate = newRate;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE, oldRate, newRate);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRate(ValueSpecification newRate)
  {
    if (newRate != rate)
    {
      NotificationChain msgs = null;
      if (rate != null)
        msgs = ((InternalEObject)rate).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE, null, msgs);
      if (newRate != null)
        msgs = ((InternalEObject)newRate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE, null, msgs);
      msgs = basicSetRate(newRate, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE, newRate, newRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueSpecification getProbability()
  {
    return probability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProbability(ValueSpecification newProbability, NotificationChain msgs)
  {
    ValueSpecification oldProbability = probability;
    probability = newProbability;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY, oldProbability, newProbability);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProbability(ValueSpecification newProbability)
  {
    if (newProbability != probability)
    {
      NotificationChain msgs = null;
      if (probability != null)
        msgs = ((InternalEObject)probability).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY, null, msgs);
      if (newProbability != null)
        msgs = ((InternalEObject)newProbability).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY, null, msgs);
      msgs = basicSetProbability(newProbability, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY, newProbability, newProbability));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueSpecification getGuard()
  {
    return guard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGuard(ValueSpecification newGuard, NotificationChain msgs)
  {
    ValueSpecification oldGuard = guard;
    guard = newGuard;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD, oldGuard, newGuard);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGuard(ValueSpecification newGuard)
  {
    if (newGuard != guard)
    {
      NotificationChain msgs = null;
      if (guard != null)
        msgs = ((InternalEObject)guard).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD, null, msgs);
      if (newGuard != null)
        msgs = ((InternalEObject)newGuard).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD, null, msgs);
      msgs = basicSetGuard(newGuard, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD, newGuard, newGuard));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueSpecification getWeight()
  {
    return weight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWeight(ValueSpecification newWeight, NotificationChain msgs)
  {
    ValueSpecification oldWeight = weight;
    weight = newWeight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT, oldWeight, newWeight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWeight(ValueSpecification newWeight)
  {
    if (newWeight != weight)
    {
      NotificationChain msgs = null;
      if (weight != null)
        msgs = ((InternalEObject)weight).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT, null, msgs);
      if (newWeight != null)
        msgs = ((InternalEObject)newWeight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT, null, msgs);
      msgs = basicSetWeight(newWeight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT, newWeight, newWeight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionalExchangeRealization> getOwnedFunctionalExchangeRealizations()
  {
    if (ownedFunctionalExchangeRealizations == null)
    {
      ownedFunctionalExchangeRealizations = new EObjectContainmentEList<FunctionalExchangeRealization>(FunctionalExchangeRealization.class, this, MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_FUNCTIONAL_EXCHANGE_REALIZATIONS);
    }
    return ownedFunctionalExchangeRealizations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUES:
        return ((InternalEList<?>)getOwnedPropertyValues()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ((InternalEList<?>)getOwnedEnumerationPropertyTypes()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUE_GROUPS:
        return ((InternalEList<?>)getOwnedPropertyValueGroups()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE:
        return basicSetRate(null, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY:
        return basicSetProbability(null, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD:
        return basicSetGuard(null, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT:
        return basicSetWeight(null, msgs);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_FUNCTIONAL_EXCHANGE_REALIZATIONS:
        return ((InternalEList<?>)getOwnedFunctionalExchangeRealizations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TYPE:
        return getType();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__ID:
        return getId();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SID:
        return getSid();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__NAME:
        return getName();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_DOC:
        return getVisibleInDoc();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_LM:
        return getVisibleInLM();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SUMMARY:
        return getSummary();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__DESCRIPTION:
        return getDescription();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REVIEW:
        return getReview();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__KIND_OF_RATE:
        return getKindOfRate();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUES:
        return getAppliedPropertyValues();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUE_GROUPS:
        return getAppliedPropertyValueGroups();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__STATUS:
        return getStatus();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__FEATURES:
        return getFeatures();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REALIZED_FLOW:
        return getRealizedFlow();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TARGET:
        return getTarget();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SOURCE:
        return getSource();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__INTERRUPTS:
        return getInterrupts();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TRANSFORMATION:
        return getTransformation();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SELECTION:
        return getSelection();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGE_SPECIFICATIONS:
        return getExchangeSpecifications();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGED_ITEMS:
        return getExchangedItems();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTICAST:
        return getIsMulticast();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTIRECEIVE:
        return getIsMultireceive();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUES:
        return getOwnedPropertyValues();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_ENUMERATION_PROPERTY_TYPES:
        return getOwnedEnumerationPropertyTypes();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUE_GROUPS:
        return getOwnedPropertyValueGroups();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE:
        return getRate();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY:
        return getProbability();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD:
        return getGuard();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT:
        return getWeight();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_FUNCTIONAL_EXCHANGE_REALIZATIONS:
        return getOwnedFunctionalExchangeRealizations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TYPE:
        setType((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__ID:
        setId((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SID:
        setSid((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__NAME:
        setName((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_DOC:
        setVisibleInDoc((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_LM:
        setVisibleInLM((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SUMMARY:
        setSummary((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REVIEW:
        setReview((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__KIND_OF_RATE:
        setKindOfRate((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__STATUS:
        setStatus((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__FEATURES:
        setFeatures((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REALIZED_FLOW:
        setRealizedFlow((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TARGET:
        setTarget((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SOURCE:
        setSource((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__INTERRUPTS:
        setInterrupts((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TRANSFORMATION:
        setTransformation((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SELECTION:
        setSelection((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGE_SPECIFICATIONS:
        setExchangeSpecifications((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGED_ITEMS:
        setExchangedItems((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTICAST:
        setIsMulticast((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTIRECEIVE:
        setIsMultireceive((String)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        getOwnedPropertyValues().addAll((Collection<? extends AbstractPropertyValue>)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        getOwnedEnumerationPropertyTypes().addAll((Collection<? extends EnumerationPropertyType>)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        getOwnedPropertyValueGroups().addAll((Collection<? extends PropertyValueGroup>)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE:
        setRate((ValueSpecification)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY:
        setProbability((ValueSpecification)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD:
        setGuard((ValueSpecification)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT:
        setWeight((ValueSpecification)newValue);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_FUNCTIONAL_EXCHANGE_REALIZATIONS:
        getOwnedFunctionalExchangeRealizations().clear();
        getOwnedFunctionalExchangeRealizations().addAll((Collection<? extends FunctionalExchangeRealization>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__ID:
        setId(ID_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SID:
        setSid(SID_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_DOC:
        setVisibleInDoc(VISIBLE_IN_DOC_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_LM:
        setVisibleInLM(VISIBLE_IN_LM_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SUMMARY:
        setSummary(SUMMARY_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REVIEW:
        setReview(REVIEW_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__KIND_OF_RATE:
        setKindOfRate(KIND_OF_RATE_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues(APPLIED_PROPERTY_VALUES_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups(APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__STATUS:
        setStatus(STATUS_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__FEATURES:
        setFeatures(FEATURES_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REALIZED_FLOW:
        setRealizedFlow(REALIZED_FLOW_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TARGET:
        setTarget(TARGET_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SOURCE:
        setSource(SOURCE_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__INTERRUPTS:
        setInterrupts(INTERRUPTS_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TRANSFORMATION:
        setTransformation(TRANSFORMATION_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SELECTION:
        setSelection(SELECTION_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGE_SPECIFICATIONS:
        setExchangeSpecifications(EXCHANGE_SPECIFICATIONS_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGED_ITEMS:
        setExchangedItems(EXCHANGED_ITEMS_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTICAST:
        setIsMulticast(IS_MULTICAST_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTIRECEIVE:
        setIsMultireceive(IS_MULTIRECEIVE_EDEFAULT);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE:
        setRate((ValueSpecification)null);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY:
        setProbability((ValueSpecification)null);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD:
        setGuard((ValueSpecification)null);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT:
        setWeight((ValueSpecification)null);
        return;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_FUNCTIONAL_EXCHANGE_REALIZATIONS:
        getOwnedFunctionalExchangeRealizations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SID:
        return SID_EDEFAULT == null ? sid != null : !SID_EDEFAULT.equals(sid);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_DOC:
        return VISIBLE_IN_DOC_EDEFAULT == null ? visibleInDoc != null : !VISIBLE_IN_DOC_EDEFAULT.equals(visibleInDoc);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__VISIBLE_IN_LM:
        return VISIBLE_IN_LM_EDEFAULT == null ? visibleInLM != null : !VISIBLE_IN_LM_EDEFAULT.equals(visibleInLM);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SUMMARY:
        return SUMMARY_EDEFAULT == null ? summary != null : !SUMMARY_EDEFAULT.equals(summary);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REVIEW:
        return REVIEW_EDEFAULT == null ? review != null : !REVIEW_EDEFAULT.equals(review);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__KIND_OF_RATE:
        return KIND_OF_RATE_EDEFAULT == null ? kindOfRate != null : !KIND_OF_RATE_EDEFAULT.equals(kindOfRate);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUES:
        return APPLIED_PROPERTY_VALUES_EDEFAULT == null ? appliedPropertyValues != null : !APPLIED_PROPERTY_VALUES_EDEFAULT.equals(appliedPropertyValues);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__APPLIED_PROPERTY_VALUE_GROUPS:
        return APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT == null ? appliedPropertyValueGroups != null : !APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT.equals(appliedPropertyValueGroups);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__STATUS:
        return STATUS_EDEFAULT == null ? status != null : !STATUS_EDEFAULT.equals(status);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__FEATURES:
        return FEATURES_EDEFAULT == null ? features != null : !FEATURES_EDEFAULT.equals(features);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__REALIZED_FLOW:
        return REALIZED_FLOW_EDEFAULT == null ? realizedFlow != null : !REALIZED_FLOW_EDEFAULT.equals(realizedFlow);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TARGET:
        return TARGET_EDEFAULT == null ? target != null : !TARGET_EDEFAULT.equals(target);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SOURCE:
        return SOURCE_EDEFAULT == null ? source != null : !SOURCE_EDEFAULT.equals(source);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__INTERRUPTS:
        return INTERRUPTS_EDEFAULT == null ? interrupts != null : !INTERRUPTS_EDEFAULT.equals(interrupts);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__TRANSFORMATION:
        return TRANSFORMATION_EDEFAULT == null ? transformation != null : !TRANSFORMATION_EDEFAULT.equals(transformation);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__SELECTION:
        return SELECTION_EDEFAULT == null ? selection != null : !SELECTION_EDEFAULT.equals(selection);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGE_SPECIFICATIONS:
        return EXCHANGE_SPECIFICATIONS_EDEFAULT == null ? exchangeSpecifications != null : !EXCHANGE_SPECIFICATIONS_EDEFAULT.equals(exchangeSpecifications);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__EXCHANGED_ITEMS:
        return EXCHANGED_ITEMS_EDEFAULT == null ? exchangedItems != null : !EXCHANGED_ITEMS_EDEFAULT.equals(exchangedItems);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTICAST:
        return IS_MULTICAST_EDEFAULT == null ? isMulticast != null : !IS_MULTICAST_EDEFAULT.equals(isMulticast);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__IS_MULTIRECEIVE:
        return IS_MULTIRECEIVE_EDEFAULT == null ? isMultireceive != null : !IS_MULTIRECEIVE_EDEFAULT.equals(isMultireceive);
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUES:
        return ownedPropertyValues != null && !ownedPropertyValues.isEmpty();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ownedEnumerationPropertyTypes != null && !ownedEnumerationPropertyTypes.isEmpty();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_PROPERTY_VALUE_GROUPS:
        return ownedPropertyValueGroups != null && !ownedPropertyValueGroups.isEmpty();
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__RATE:
        return rate != null;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__PROBABILITY:
        return probability != null;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__GUARD:
        return guard != null;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__WEIGHT:
        return weight != null;
      case MyLADslPackage.FUNCTIONAL_EXCHANGE__OWNED_FUNCTIONAL_EXCHANGE_REALIZATIONS:
        return ownedFunctionalExchangeRealizations != null && !ownedFunctionalExchangeRealizations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", id: ");
    result.append(id);
    result.append(", sid: ");
    result.append(sid);
    result.append(", name: ");
    result.append(name);
    result.append(", visibleInDoc: ");
    result.append(visibleInDoc);
    result.append(", visibleInLM: ");
    result.append(visibleInLM);
    result.append(", summary: ");
    result.append(summary);
    result.append(", description: ");
    result.append(description);
    result.append(", review: ");
    result.append(review);
    result.append(", kindOfRate: ");
    result.append(kindOfRate);
    result.append(", appliedPropertyValues: ");
    result.append(appliedPropertyValues);
    result.append(", appliedPropertyValueGroups: ");
    result.append(appliedPropertyValueGroups);
    result.append(", status: ");
    result.append(status);
    result.append(", features: ");
    result.append(features);
    result.append(", realizedFlow: ");
    result.append(realizedFlow);
    result.append(", target: ");
    result.append(target);
    result.append(", source: ");
    result.append(source);
    result.append(", interrupts: ");
    result.append(interrupts);
    result.append(", transformation: ");
    result.append(transformation);
    result.append(", selection: ");
    result.append(selection);
    result.append(", exchangeSpecifications: ");
    result.append(exchangeSpecifications);
    result.append(", exchangedItems: ");
    result.append(exchangedItems);
    result.append(", isMulticast: ");
    result.append(isMulticast);
    result.append(", isMultireceive: ");
    result.append(isMultireceive);
    result.append(')');
    return result.toString();
  }

} //FunctionalExchangeImpl
