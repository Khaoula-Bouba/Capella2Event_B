/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.mydsl.myLADsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myLADsl.AbstractCapabilityPkg;
import org.xtext.example.mydsl.myLADsl.AbstractPropertyValue;
import org.xtext.example.mydsl.myLADsl.ComponentExchange;
import org.xtext.example.mydsl.myLADsl.ComponentExchangeCategory;
import org.xtext.example.mydsl.myLADsl.ComponentExchangeRealization;
import org.xtext.example.mydsl.myLADsl.ComponentFunctionalAllocation;
import org.xtext.example.mydsl.myLADsl.DataPkg;
import org.xtext.example.mydsl.myLADsl.EnumerationPropertyType;
import org.xtext.example.mydsl.myLADsl.ExchangeLink;
import org.xtext.example.mydsl.myLADsl.InterfacePkg;
import org.xtext.example.mydsl.myLADsl.LogicalArchitecture;
import org.xtext.example.mydsl.myLADsl.LogicalComponentPkg;
import org.xtext.example.mydsl.myLADsl.LogicalFunctionPkg;
import org.xtext.example.mydsl.myLADsl.MyLADslPackage;
import org.xtext.example.mydsl.myLADsl.PropertyValueGroup;
import org.xtext.example.mydsl.myLADsl.PropertyValuePkg;
import org.xtext.example.mydsl.myLADsl.RequirementsPkg;
import org.xtext.example.mydsl.myLADsl.SystemAnalysisRealization;
import org.xtext.example.mydsl.myLADsl.Trace;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Logical Architecture</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getArchitectureId <em>Architecture Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getSid <em>Sid</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getVisibleInDoc <em>Visible In Doc</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getVisibleInLM <em>Visible In LM</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getSummary <em>Summary</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getReview <em>Review</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getAppliedPropertyValues <em>Applied Property Values</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getAppliedPropertyValueGroups <em>Applied Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getStatus <em>Status</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getFeatures <em>Features</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedPropertyValues <em>Owned Property Values</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedEnumerationPropertyTypes <em>Owned Enumeration Property Types</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedPropertyValueGroups <em>Owned Property Value Groups</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedTraces <em>Owned Traces</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedPropertyValuePkgs <em>Owned Property Value Pkgs</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getContainedLogicalFunctionPkg <em>Contained Logical Function Pkg</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedComponentExchanges <em>Owned Component Exchanges</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedComponentExchangeCategories <em>Owned Component Exchange Categories</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedFunctionalLinks <em>Owned Functional Links</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedFunctionalAllocations <em>Owned Functional Allocations</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedComponentExchangeRealizations <em>Owned Component Exchange Realizations</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedRequirementPkgs <em>Owned Requirement Pkgs</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedAbstractCapabilityPkg <em>Owned Abstract Capability Pkg</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedInterfacePkg <em>Owned Interface Pkg</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedDataPkg <em>Owned Data Pkg</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedLogicalComponentPkg <em>Owned Logical Component Pkg</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myLADsl.impl.LogicalArchitectureImpl#getOwnedSystemAnalysisRealizations <em>Owned System Analysis Realizations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LogicalArchitectureImpl extends MinimalEObjectImpl.Container implements LogicalArchitecture
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getArchitectureId() <em>Architecture Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitectureId()
   * @generated
   * @ordered
   */
  protected static final String ARCHITECTURE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArchitectureId() <em>Architecture Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitectureId()
   * @generated
   * @ordered
   */
  protected String architectureId = ARCHITECTURE_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected static final String SID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected String sid = SID_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_DOC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInDoc() <em>Visible In Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInDoc()
   * @generated
   * @ordered
   */
  protected String visibleInDoc = VISIBLE_IN_DOC_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_IN_LM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibleInLM() <em>Visible In LM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibleInLM()
   * @generated
   * @ordered
   */
  protected String visibleInLM = VISIBLE_IN_LM_EDEFAULT;

  /**
   * The default value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected static final String SUMMARY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSummary() <em>Summary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected String summary = SUMMARY_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected static final String REVIEW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReview() <em>Review</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReview()
   * @generated
   * @ordered
   */
  protected String review = REVIEW_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValues() <em>Applied Property Values</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValues()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValues = APPLIED_PROPERTY_VALUES_EDEFAULT;

  /**
   * The default value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected static final String APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppliedPropertyValueGroups() <em>Applied Property Value Groups</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppliedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected String appliedPropertyValueGroups = APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT;

  /**
   * The default value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected static final String STATUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStatus() <em>Status</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected String status = STATUS_EDEFAULT;

  /**
   * The default value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected static final String FEATURES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFeatures() <em>Features</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatures()
   * @generated
   * @ordered
   */
  protected String features = FEATURES_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedPropertyValues() <em>Owned Property Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValues()
   * @generated
   * @ordered
   */
  protected EList<AbstractPropertyValue> ownedPropertyValues;

  /**
   * The cached value of the '{@link #getOwnedEnumerationPropertyTypes() <em>Owned Enumeration Property Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedEnumerationPropertyTypes()
   * @generated
   * @ordered
   */
  protected EList<EnumerationPropertyType> ownedEnumerationPropertyTypes;

  /**
   * The cached value of the '{@link #getOwnedPropertyValueGroups() <em>Owned Property Value Groups</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValueGroups()
   * @generated
   * @ordered
   */
  protected EList<PropertyValueGroup> ownedPropertyValueGroups;

  /**
   * The cached value of the '{@link #getOwnedTraces() <em>Owned Traces</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedTraces()
   * @generated
   * @ordered
   */
  protected EList<Trace> ownedTraces;

  /**
   * The cached value of the '{@link #getOwnedPropertyValuePkgs() <em>Owned Property Value Pkgs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedPropertyValuePkgs()
   * @generated
   * @ordered
   */
  protected EList<PropertyValuePkg> ownedPropertyValuePkgs;

  /**
   * The cached value of the '{@link #getContainedLogicalFunctionPkg() <em>Contained Logical Function Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainedLogicalFunctionPkg()
   * @generated
   * @ordered
   */
  protected LogicalFunctionPkg containedLogicalFunctionPkg;

  /**
   * The cached value of the '{@link #getOwnedComponentExchanges() <em>Owned Component Exchanges</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchanges()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchange> ownedComponentExchanges;

  /**
   * The cached value of the '{@link #getOwnedComponentExchangeCategories() <em>Owned Component Exchange Categories</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchangeCategories()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchangeCategory> ownedComponentExchangeCategories;

  /**
   * The cached value of the '{@link #getOwnedFunctionalLinks() <em>Owned Functional Links</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFunctionalLinks()
   * @generated
   * @ordered
   */
  protected EList<ExchangeLink> ownedFunctionalLinks;

  /**
   * The cached value of the '{@link #getOwnedFunctionalAllocations() <em>Owned Functional Allocations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedFunctionalAllocations()
   * @generated
   * @ordered
   */
  protected EList<ComponentFunctionalAllocation> ownedFunctionalAllocations;

  /**
   * The cached value of the '{@link #getOwnedComponentExchangeRealizations() <em>Owned Component Exchange Realizations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedComponentExchangeRealizations()
   * @generated
   * @ordered
   */
  protected EList<ComponentExchangeRealization> ownedComponentExchangeRealizations;

  /**
   * The cached value of the '{@link #getOwnedRequirementPkgs() <em>Owned Requirement Pkgs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedRequirementPkgs()
   * @generated
   * @ordered
   */
  protected EList<RequirementsPkg> ownedRequirementPkgs;

  /**
   * The cached value of the '{@link #getOwnedAbstractCapabilityPkg() <em>Owned Abstract Capability Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedAbstractCapabilityPkg()
   * @generated
   * @ordered
   */
  protected AbstractCapabilityPkg ownedAbstractCapabilityPkg;

  /**
   * The cached value of the '{@link #getOwnedInterfacePkg() <em>Owned Interface Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedInterfacePkg()
   * @generated
   * @ordered
   */
  protected InterfacePkg ownedInterfacePkg;

  /**
   * The cached value of the '{@link #getOwnedDataPkg() <em>Owned Data Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedDataPkg()
   * @generated
   * @ordered
   */
  protected DataPkg ownedDataPkg;

  /**
   * The cached value of the '{@link #getOwnedLogicalComponentPkg() <em>Owned Logical Component Pkg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedLogicalComponentPkg()
   * @generated
   * @ordered
   */
  protected LogicalComponentPkg ownedLogicalComponentPkg;

  /**
   * The cached value of the '{@link #getOwnedSystemAnalysisRealizations() <em>Owned System Analysis Realizations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedSystemAnalysisRealizations()
   * @generated
   * @ordered
   */
  protected EList<SystemAnalysisRealization> ownedSystemAnalysisRealizations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LogicalArchitectureImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyLADslPackage.eINSTANCE.getLogicalArchitecture();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArchitectureId()
  {
    return architectureId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArchitectureId(String newArchitectureId)
  {
    String oldArchitectureId = architectureId;
    architectureId = newArchitectureId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__ARCHITECTURE_ID, oldArchitectureId, architectureId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSid()
  {
    return sid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSid(String newSid)
  {
    String oldSid = sid;
    sid = newSid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__SID, oldSid, sid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInDoc()
  {
    return visibleInDoc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInDoc(String newVisibleInDoc)
  {
    String oldVisibleInDoc = visibleInDoc;
    visibleInDoc = newVisibleInDoc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_DOC, oldVisibleInDoc, visibleInDoc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibleInLM()
  {
    return visibleInLM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibleInLM(String newVisibleInLM)
  {
    String oldVisibleInLM = visibleInLM;
    visibleInLM = newVisibleInLM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_LM, oldVisibleInLM, visibleInLM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSummary()
  {
    return summary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSummary(String newSummary)
  {
    String oldSummary = summary;
    summary = newSummary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__SUMMARY, oldSummary, summary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReview()
  {
    return review;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReview(String newReview)
  {
    String oldReview = review;
    review = newReview;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__REVIEW, oldReview, review));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValues()
  {
    return appliedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValues(String newAppliedPropertyValues)
  {
    String oldAppliedPropertyValues = appliedPropertyValues;
    appliedPropertyValues = newAppliedPropertyValues;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUES, oldAppliedPropertyValues, appliedPropertyValues));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppliedPropertyValueGroups()
  {
    return appliedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppliedPropertyValueGroups(String newAppliedPropertyValueGroups)
  {
    String oldAppliedPropertyValueGroups = appliedPropertyValueGroups;
    appliedPropertyValueGroups = newAppliedPropertyValueGroups;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUE_GROUPS, oldAppliedPropertyValueGroups, appliedPropertyValueGroups));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStatus()
  {
    return status;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatus(String newStatus)
  {
    String oldStatus = status;
    status = newStatus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__STATUS, oldStatus, status));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFeatures()
  {
    return features;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFeatures(String newFeatures)
  {
    String oldFeatures = features;
    features = newFeatures;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__FEATURES, oldFeatures, features));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractPropertyValue> getOwnedPropertyValues()
  {
    if (ownedPropertyValues == null)
    {
      ownedPropertyValues = new EObjectContainmentEList<AbstractPropertyValue>(AbstractPropertyValue.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUES);
    }
    return ownedPropertyValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EnumerationPropertyType> getOwnedEnumerationPropertyTypes()
  {
    if (ownedEnumerationPropertyTypes == null)
    {
      ownedEnumerationPropertyTypes = new EObjectContainmentEList<EnumerationPropertyType>(EnumerationPropertyType.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ENUMERATION_PROPERTY_TYPES);
    }
    return ownedEnumerationPropertyTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PropertyValueGroup> getOwnedPropertyValueGroups()
  {
    if (ownedPropertyValueGroups == null)
    {
      ownedPropertyValueGroups = new EObjectContainmentEList<PropertyValueGroup>(PropertyValueGroup.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_GROUPS);
    }
    return ownedPropertyValueGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Trace> getOwnedTraces()
  {
    if (ownedTraces == null)
    {
      ownedTraces = new EObjectContainmentEList<Trace>(Trace.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_TRACES);
    }
    return ownedTraces;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PropertyValuePkg> getOwnedPropertyValuePkgs()
  {
    if (ownedPropertyValuePkgs == null)
    {
      ownedPropertyValuePkgs = new EObjectContainmentEList<PropertyValuePkg>(PropertyValuePkg.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_PKGS);
    }
    return ownedPropertyValuePkgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicalFunctionPkg getContainedLogicalFunctionPkg()
  {
    return containedLogicalFunctionPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContainedLogicalFunctionPkg(LogicalFunctionPkg newContainedLogicalFunctionPkg, NotificationChain msgs)
  {
    LogicalFunctionPkg oldContainedLogicalFunctionPkg = containedLogicalFunctionPkg;
    containedLogicalFunctionPkg = newContainedLogicalFunctionPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG, oldContainedLogicalFunctionPkg, newContainedLogicalFunctionPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainedLogicalFunctionPkg(LogicalFunctionPkg newContainedLogicalFunctionPkg)
  {
    if (newContainedLogicalFunctionPkg != containedLogicalFunctionPkg)
    {
      NotificationChain msgs = null;
      if (containedLogicalFunctionPkg != null)
        msgs = ((InternalEObject)containedLogicalFunctionPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG, null, msgs);
      if (newContainedLogicalFunctionPkg != null)
        msgs = ((InternalEObject)newContainedLogicalFunctionPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG, null, msgs);
      msgs = basicSetContainedLogicalFunctionPkg(newContainedLogicalFunctionPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG, newContainedLogicalFunctionPkg, newContainedLogicalFunctionPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchange> getOwnedComponentExchanges()
  {
    if (ownedComponentExchanges == null)
    {
      ownedComponentExchanges = new EObjectContainmentEList<ComponentExchange>(ComponentExchange.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGES);
    }
    return ownedComponentExchanges;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchangeCategory> getOwnedComponentExchangeCategories()
  {
    if (ownedComponentExchangeCategories == null)
    {
      ownedComponentExchangeCategories = new EObjectContainmentEList<ComponentExchangeCategory>(ComponentExchangeCategory.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_CATEGORIES);
    }
    return ownedComponentExchangeCategories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExchangeLink> getOwnedFunctionalLinks()
  {
    if (ownedFunctionalLinks == null)
    {
      ownedFunctionalLinks = new EObjectContainmentEList<ExchangeLink>(ExchangeLink.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_LINKS);
    }
    return ownedFunctionalLinks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentFunctionalAllocation> getOwnedFunctionalAllocations()
  {
    if (ownedFunctionalAllocations == null)
    {
      ownedFunctionalAllocations = new EObjectContainmentEList<ComponentFunctionalAllocation>(ComponentFunctionalAllocation.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_ALLOCATIONS);
    }
    return ownedFunctionalAllocations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentExchangeRealization> getOwnedComponentExchangeRealizations()
  {
    if (ownedComponentExchangeRealizations == null)
    {
      ownedComponentExchangeRealizations = new EObjectContainmentEList<ComponentExchangeRealization>(ComponentExchangeRealization.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_REALIZATIONS);
    }
    return ownedComponentExchangeRealizations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RequirementsPkg> getOwnedRequirementPkgs()
  {
    if (ownedRequirementPkgs == null)
    {
      ownedRequirementPkgs = new EObjectContainmentEList<RequirementsPkg>(RequirementsPkg.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_REQUIREMENT_PKGS);
    }
    return ownedRequirementPkgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractCapabilityPkg getOwnedAbstractCapabilityPkg()
  {
    return ownedAbstractCapabilityPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedAbstractCapabilityPkg(AbstractCapabilityPkg newOwnedAbstractCapabilityPkg, NotificationChain msgs)
  {
    AbstractCapabilityPkg oldOwnedAbstractCapabilityPkg = ownedAbstractCapabilityPkg;
    ownedAbstractCapabilityPkg = newOwnedAbstractCapabilityPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG, oldOwnedAbstractCapabilityPkg, newOwnedAbstractCapabilityPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedAbstractCapabilityPkg(AbstractCapabilityPkg newOwnedAbstractCapabilityPkg)
  {
    if (newOwnedAbstractCapabilityPkg != ownedAbstractCapabilityPkg)
    {
      NotificationChain msgs = null;
      if (ownedAbstractCapabilityPkg != null)
        msgs = ((InternalEObject)ownedAbstractCapabilityPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG, null, msgs);
      if (newOwnedAbstractCapabilityPkg != null)
        msgs = ((InternalEObject)newOwnedAbstractCapabilityPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG, null, msgs);
      msgs = basicSetOwnedAbstractCapabilityPkg(newOwnedAbstractCapabilityPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG, newOwnedAbstractCapabilityPkg, newOwnedAbstractCapabilityPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InterfacePkg getOwnedInterfacePkg()
  {
    return ownedInterfacePkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedInterfacePkg(InterfacePkg newOwnedInterfacePkg, NotificationChain msgs)
  {
    InterfacePkg oldOwnedInterfacePkg = ownedInterfacePkg;
    ownedInterfacePkg = newOwnedInterfacePkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG, oldOwnedInterfacePkg, newOwnedInterfacePkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedInterfacePkg(InterfacePkg newOwnedInterfacePkg)
  {
    if (newOwnedInterfacePkg != ownedInterfacePkg)
    {
      NotificationChain msgs = null;
      if (ownedInterfacePkg != null)
        msgs = ((InternalEObject)ownedInterfacePkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG, null, msgs);
      if (newOwnedInterfacePkg != null)
        msgs = ((InternalEObject)newOwnedInterfacePkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG, null, msgs);
      msgs = basicSetOwnedInterfacePkg(newOwnedInterfacePkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG, newOwnedInterfacePkg, newOwnedInterfacePkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataPkg getOwnedDataPkg()
  {
    return ownedDataPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedDataPkg(DataPkg newOwnedDataPkg, NotificationChain msgs)
  {
    DataPkg oldOwnedDataPkg = ownedDataPkg;
    ownedDataPkg = newOwnedDataPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG, oldOwnedDataPkg, newOwnedDataPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedDataPkg(DataPkg newOwnedDataPkg)
  {
    if (newOwnedDataPkg != ownedDataPkg)
    {
      NotificationChain msgs = null;
      if (ownedDataPkg != null)
        msgs = ((InternalEObject)ownedDataPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG, null, msgs);
      if (newOwnedDataPkg != null)
        msgs = ((InternalEObject)newOwnedDataPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG, null, msgs);
      msgs = basicSetOwnedDataPkg(newOwnedDataPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG, newOwnedDataPkg, newOwnedDataPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicalComponentPkg getOwnedLogicalComponentPkg()
  {
    return ownedLogicalComponentPkg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedLogicalComponentPkg(LogicalComponentPkg newOwnedLogicalComponentPkg, NotificationChain msgs)
  {
    LogicalComponentPkg oldOwnedLogicalComponentPkg = ownedLogicalComponentPkg;
    ownedLogicalComponentPkg = newOwnedLogicalComponentPkg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG, oldOwnedLogicalComponentPkg, newOwnedLogicalComponentPkg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedLogicalComponentPkg(LogicalComponentPkg newOwnedLogicalComponentPkg)
  {
    if (newOwnedLogicalComponentPkg != ownedLogicalComponentPkg)
    {
      NotificationChain msgs = null;
      if (ownedLogicalComponentPkg != null)
        msgs = ((InternalEObject)ownedLogicalComponentPkg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG, null, msgs);
      if (newOwnedLogicalComponentPkg != null)
        msgs = ((InternalEObject)newOwnedLogicalComponentPkg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG, null, msgs);
      msgs = basicSetOwnedLogicalComponentPkg(newOwnedLogicalComponentPkg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG, newOwnedLogicalComponentPkg, newOwnedLogicalComponentPkg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SystemAnalysisRealization> getOwnedSystemAnalysisRealizations()
  {
    if (ownedSystemAnalysisRealizations == null)
    {
      ownedSystemAnalysisRealizations = new EObjectContainmentEList<SystemAnalysisRealization>(SystemAnalysisRealization.class, this, MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_SYSTEM_ANALYSIS_REALIZATIONS);
    }
    return ownedSystemAnalysisRealizations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUES:
        return ((InternalEList<?>)getOwnedPropertyValues()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ((InternalEList<?>)getOwnedEnumerationPropertyTypes()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_GROUPS:
        return ((InternalEList<?>)getOwnedPropertyValueGroups()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_TRACES:
        return ((InternalEList<?>)getOwnedTraces()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_PKGS:
        return ((InternalEList<?>)getOwnedPropertyValuePkgs()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG:
        return basicSetContainedLogicalFunctionPkg(null, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGES:
        return ((InternalEList<?>)getOwnedComponentExchanges()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return ((InternalEList<?>)getOwnedComponentExchangeCategories()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_LINKS:
        return ((InternalEList<?>)getOwnedFunctionalLinks()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_ALLOCATIONS:
        return ((InternalEList<?>)getOwnedFunctionalAllocations()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_REALIZATIONS:
        return ((InternalEList<?>)getOwnedComponentExchangeRealizations()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_REQUIREMENT_PKGS:
        return ((InternalEList<?>)getOwnedRequirementPkgs()).basicRemove(otherEnd, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG:
        return basicSetOwnedAbstractCapabilityPkg(null, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG:
        return basicSetOwnedInterfacePkg(null, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG:
        return basicSetOwnedDataPkg(null, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG:
        return basicSetOwnedLogicalComponentPkg(null, msgs);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_SYSTEM_ANALYSIS_REALIZATIONS:
        return ((InternalEList<?>)getOwnedSystemAnalysisRealizations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_ARCHITECTURE__TYPE:
        return getType();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__ARCHITECTURE_ID:
        return getArchitectureId();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SID:
        return getSid();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__NAME:
        return getName();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_DOC:
        return getVisibleInDoc();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_LM:
        return getVisibleInLM();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SUMMARY:
        return getSummary();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__DESCRIPTION:
        return getDescription();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__REVIEW:
        return getReview();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUES:
        return getAppliedPropertyValues();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUE_GROUPS:
        return getAppliedPropertyValueGroups();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__STATUS:
        return getStatus();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__FEATURES:
        return getFeatures();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUES:
        return getOwnedPropertyValues();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ENUMERATION_PROPERTY_TYPES:
        return getOwnedEnumerationPropertyTypes();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_GROUPS:
        return getOwnedPropertyValueGroups();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_TRACES:
        return getOwnedTraces();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_PKGS:
        return getOwnedPropertyValuePkgs();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG:
        return getContainedLogicalFunctionPkg();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGES:
        return getOwnedComponentExchanges();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return getOwnedComponentExchangeCategories();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_LINKS:
        return getOwnedFunctionalLinks();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_ALLOCATIONS:
        return getOwnedFunctionalAllocations();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_REALIZATIONS:
        return getOwnedComponentExchangeRealizations();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_REQUIREMENT_PKGS:
        return getOwnedRequirementPkgs();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG:
        return getOwnedAbstractCapabilityPkg();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG:
        return getOwnedInterfacePkg();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG:
        return getOwnedDataPkg();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG:
        return getOwnedLogicalComponentPkg();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_SYSTEM_ANALYSIS_REALIZATIONS:
        return getOwnedSystemAnalysisRealizations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_ARCHITECTURE__TYPE:
        setType((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__ARCHITECTURE_ID:
        setArchitectureId((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SID:
        setSid((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__NAME:
        setName((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_DOC:
        setVisibleInDoc((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_LM:
        setVisibleInLM((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SUMMARY:
        setSummary((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__REVIEW:
        setReview((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__STATUS:
        setStatus((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__FEATURES:
        setFeatures((String)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        getOwnedPropertyValues().addAll((Collection<? extends AbstractPropertyValue>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        getOwnedEnumerationPropertyTypes().addAll((Collection<? extends EnumerationPropertyType>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        getOwnedPropertyValueGroups().addAll((Collection<? extends PropertyValueGroup>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_TRACES:
        getOwnedTraces().clear();
        getOwnedTraces().addAll((Collection<? extends Trace>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_PKGS:
        getOwnedPropertyValuePkgs().clear();
        getOwnedPropertyValuePkgs().addAll((Collection<? extends PropertyValuePkg>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG:
        setContainedLogicalFunctionPkg((LogicalFunctionPkg)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGES:
        getOwnedComponentExchanges().clear();
        getOwnedComponentExchanges().addAll((Collection<? extends ComponentExchange>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        getOwnedComponentExchangeCategories().clear();
        getOwnedComponentExchangeCategories().addAll((Collection<? extends ComponentExchangeCategory>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_LINKS:
        getOwnedFunctionalLinks().clear();
        getOwnedFunctionalLinks().addAll((Collection<? extends ExchangeLink>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_ALLOCATIONS:
        getOwnedFunctionalAllocations().clear();
        getOwnedFunctionalAllocations().addAll((Collection<? extends ComponentFunctionalAllocation>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_REALIZATIONS:
        getOwnedComponentExchangeRealizations().clear();
        getOwnedComponentExchangeRealizations().addAll((Collection<? extends ComponentExchangeRealization>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_REQUIREMENT_PKGS:
        getOwnedRequirementPkgs().clear();
        getOwnedRequirementPkgs().addAll((Collection<? extends RequirementsPkg>)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG:
        setOwnedAbstractCapabilityPkg((AbstractCapabilityPkg)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG:
        setOwnedInterfacePkg((InterfacePkg)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG:
        setOwnedDataPkg((DataPkg)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG:
        setOwnedLogicalComponentPkg((LogicalComponentPkg)newValue);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_SYSTEM_ANALYSIS_REALIZATIONS:
        getOwnedSystemAnalysisRealizations().clear();
        getOwnedSystemAnalysisRealizations().addAll((Collection<? extends SystemAnalysisRealization>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_ARCHITECTURE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__ARCHITECTURE_ID:
        setArchitectureId(ARCHITECTURE_ID_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SID:
        setSid(SID_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_DOC:
        setVisibleInDoc(VISIBLE_IN_DOC_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_LM:
        setVisibleInLM(VISIBLE_IN_LM_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SUMMARY:
        setSummary(SUMMARY_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__REVIEW:
        setReview(REVIEW_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUES:
        setAppliedPropertyValues(APPLIED_PROPERTY_VALUES_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUE_GROUPS:
        setAppliedPropertyValueGroups(APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__STATUS:
        setStatus(STATUS_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__FEATURES:
        setFeatures(FEATURES_EDEFAULT);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUES:
        getOwnedPropertyValues().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ENUMERATION_PROPERTY_TYPES:
        getOwnedEnumerationPropertyTypes().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_GROUPS:
        getOwnedPropertyValueGroups().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_TRACES:
        getOwnedTraces().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_PKGS:
        getOwnedPropertyValuePkgs().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG:
        setContainedLogicalFunctionPkg((LogicalFunctionPkg)null);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGES:
        getOwnedComponentExchanges().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        getOwnedComponentExchangeCategories().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_LINKS:
        getOwnedFunctionalLinks().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_ALLOCATIONS:
        getOwnedFunctionalAllocations().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_REALIZATIONS:
        getOwnedComponentExchangeRealizations().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_REQUIREMENT_PKGS:
        getOwnedRequirementPkgs().clear();
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG:
        setOwnedAbstractCapabilityPkg((AbstractCapabilityPkg)null);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG:
        setOwnedInterfacePkg((InterfacePkg)null);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG:
        setOwnedDataPkg((DataPkg)null);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG:
        setOwnedLogicalComponentPkg((LogicalComponentPkg)null);
        return;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_SYSTEM_ANALYSIS_REALIZATIONS:
        getOwnedSystemAnalysisRealizations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyLADslPackage.LOGICAL_ARCHITECTURE__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__ARCHITECTURE_ID:
        return ARCHITECTURE_ID_EDEFAULT == null ? architectureId != null : !ARCHITECTURE_ID_EDEFAULT.equals(architectureId);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SID:
        return SID_EDEFAULT == null ? sid != null : !SID_EDEFAULT.equals(sid);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_DOC:
        return VISIBLE_IN_DOC_EDEFAULT == null ? visibleInDoc != null : !VISIBLE_IN_DOC_EDEFAULT.equals(visibleInDoc);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__VISIBLE_IN_LM:
        return VISIBLE_IN_LM_EDEFAULT == null ? visibleInLM != null : !VISIBLE_IN_LM_EDEFAULT.equals(visibleInLM);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__SUMMARY:
        return SUMMARY_EDEFAULT == null ? summary != null : !SUMMARY_EDEFAULT.equals(summary);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__REVIEW:
        return REVIEW_EDEFAULT == null ? review != null : !REVIEW_EDEFAULT.equals(review);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUES:
        return APPLIED_PROPERTY_VALUES_EDEFAULT == null ? appliedPropertyValues != null : !APPLIED_PROPERTY_VALUES_EDEFAULT.equals(appliedPropertyValues);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__APPLIED_PROPERTY_VALUE_GROUPS:
        return APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT == null ? appliedPropertyValueGroups != null : !APPLIED_PROPERTY_VALUE_GROUPS_EDEFAULT.equals(appliedPropertyValueGroups);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__STATUS:
        return STATUS_EDEFAULT == null ? status != null : !STATUS_EDEFAULT.equals(status);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__FEATURES:
        return FEATURES_EDEFAULT == null ? features != null : !FEATURES_EDEFAULT.equals(features);
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUES:
        return ownedPropertyValues != null && !ownedPropertyValues.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ENUMERATION_PROPERTY_TYPES:
        return ownedEnumerationPropertyTypes != null && !ownedEnumerationPropertyTypes.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_GROUPS:
        return ownedPropertyValueGroups != null && !ownedPropertyValueGroups.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_TRACES:
        return ownedTraces != null && !ownedTraces.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_PROPERTY_VALUE_PKGS:
        return ownedPropertyValuePkgs != null && !ownedPropertyValuePkgs.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__CONTAINED_LOGICAL_FUNCTION_PKG:
        return containedLogicalFunctionPkg != null;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGES:
        return ownedComponentExchanges != null && !ownedComponentExchanges.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_CATEGORIES:
        return ownedComponentExchangeCategories != null && !ownedComponentExchangeCategories.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_LINKS:
        return ownedFunctionalLinks != null && !ownedFunctionalLinks.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_FUNCTIONAL_ALLOCATIONS:
        return ownedFunctionalAllocations != null && !ownedFunctionalAllocations.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_COMPONENT_EXCHANGE_REALIZATIONS:
        return ownedComponentExchangeRealizations != null && !ownedComponentExchangeRealizations.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_REQUIREMENT_PKGS:
        return ownedRequirementPkgs != null && !ownedRequirementPkgs.isEmpty();
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_ABSTRACT_CAPABILITY_PKG:
        return ownedAbstractCapabilityPkg != null;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_INTERFACE_PKG:
        return ownedInterfacePkg != null;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_DATA_PKG:
        return ownedDataPkg != null;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_LOGICAL_COMPONENT_PKG:
        return ownedLogicalComponentPkg != null;
      case MyLADslPackage.LOGICAL_ARCHITECTURE__OWNED_SYSTEM_ANALYSIS_REALIZATIONS:
        return ownedSystemAnalysisRealizations != null && !ownedSystemAnalysisRealizations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", architectureId: ");
    result.append(architectureId);
    result.append(", sid: ");
    result.append(sid);
    result.append(", name: ");
    result.append(name);
    result.append(", visibleInDoc: ");
    result.append(visibleInDoc);
    result.append(", visibleInLM: ");
    result.append(visibleInLM);
    result.append(", summary: ");
    result.append(summary);
    result.append(", description: ");
    result.append(description);
    result.append(", review: ");
    result.append(review);
    result.append(", appliedPropertyValues: ");
    result.append(appliedPropertyValues);
    result.append(", appliedPropertyValueGroups: ");
    result.append(appliedPropertyValueGroups);
    result.append(", status: ");
    result.append(status);
    result.append(", features: ");
    result.append(features);
    result.append(')');
    return result.toString();
  }

} //LogicalArchitectureImpl
