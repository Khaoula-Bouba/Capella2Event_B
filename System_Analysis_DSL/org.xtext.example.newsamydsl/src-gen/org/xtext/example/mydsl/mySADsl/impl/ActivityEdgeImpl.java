/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.mydsl.mySADsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.mySADsl.ActivityEdge;
import org.xtext.example.mydsl.mySADsl.MySADslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Activity Edge</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getSid <em>Sid</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getKindOfRate <em>Kind Of Rate</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getRealizedFlow <em>Realized Flow</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getSource <em>Source</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getInterrupts <em>Interrupts</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getRate <em>Rate</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getProbability <em>Probability</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getGuard <em>Guard</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.ActivityEdgeImpl#getWeight <em>Weight</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActivityEdgeImpl extends MinimalEObjectImpl.Container implements ActivityEdge
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected static final String SID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected String sid = SID_EDEFAULT;

  /**
   * The default value of the '{@link #getKindOfRate() <em>Kind Of Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKindOfRate()
   * @generated
   * @ordered
   */
  protected static final String KIND_OF_RATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKindOfRate() <em>Kind Of Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKindOfRate()
   * @generated
   * @ordered
   */
  protected String kindOfRate = KIND_OF_RATE_EDEFAULT;

  /**
   * The default value of the '{@link #getRealizedFlow() <em>Realized Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRealizedFlow()
   * @generated
   * @ordered
   */
  protected static final String REALIZED_FLOW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRealizedFlow() <em>Realized Flow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRealizedFlow()
   * @generated
   * @ordered
   */
  protected String realizedFlow = REALIZED_FLOW_EDEFAULT;

  /**
   * The default value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected static final String TARGET_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected String target = TARGET_EDEFAULT;

  /**
   * The default value of the '{@link #getSource() <em>Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected static final String SOURCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected String source = SOURCE_EDEFAULT;

  /**
   * The default value of the '{@link #getInterrupts() <em>Interrupts</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterrupts()
   * @generated
   * @ordered
   */
  protected static final String INTERRUPTS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInterrupts() <em>Interrupts</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterrupts()
   * @generated
   * @ordered
   */
  protected String interrupts = INTERRUPTS_EDEFAULT;

  /**
   * The default value of the '{@link #getRate() <em>Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRate()
   * @generated
   * @ordered
   */
  protected static final String RATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRate() <em>Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRate()
   * @generated
   * @ordered
   */
  protected String rate = RATE_EDEFAULT;

  /**
   * The default value of the '{@link #getProbability() <em>Probability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbability()
   * @generated
   * @ordered
   */
  protected static final String PROBABILITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProbability() <em>Probability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbability()
   * @generated
   * @ordered
   */
  protected String probability = PROBABILITY_EDEFAULT;

  /**
   * The default value of the '{@link #getGuard() <em>Guard</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuard()
   * @generated
   * @ordered
   */
  protected static final String GUARD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGuard() <em>Guard</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuard()
   * @generated
   * @ordered
   */
  protected String guard = GUARD_EDEFAULT;

  /**
   * The default value of the '{@link #getWeight() <em>Weight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected static final String WEIGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWeight() <em>Weight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected String weight = WEIGHT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ActivityEdgeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MySADslPackage.eINSTANCE.getActivityEdge();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSid()
  {
    return sid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSid(String newSid)
  {
    String oldSid = sid;
    sid = newSid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__SID, oldSid, sid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKindOfRate()
  {
    return kindOfRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKindOfRate(String newKindOfRate)
  {
    String oldKindOfRate = kindOfRate;
    kindOfRate = newKindOfRate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__KIND_OF_RATE, oldKindOfRate, kindOfRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRealizedFlow()
  {
    return realizedFlow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRealizedFlow(String newRealizedFlow)
  {
    String oldRealizedFlow = realizedFlow;
    realizedFlow = newRealizedFlow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__REALIZED_FLOW, oldRealizedFlow, realizedFlow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget(String newTarget)
  {
    String oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSource(String newSource)
  {
    String oldSource = source;
    source = newSource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__SOURCE, oldSource, source));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInterrupts()
  {
    return interrupts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInterrupts(String newInterrupts)
  {
    String oldInterrupts = interrupts;
    interrupts = newInterrupts;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__INTERRUPTS, oldInterrupts, interrupts));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRate()
  {
    return rate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRate(String newRate)
  {
    String oldRate = rate;
    rate = newRate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__RATE, oldRate, rate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProbability()
  {
    return probability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProbability(String newProbability)
  {
    String oldProbability = probability;
    probability = newProbability;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__PROBABILITY, oldProbability, probability));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGuard()
  {
    return guard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGuard(String newGuard)
  {
    String oldGuard = guard;
    guard = newGuard;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__GUARD, oldGuard, guard));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWeight()
  {
    return weight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWeight(String newWeight)
  {
    String oldWeight = weight;
    weight = newWeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.ACTIVITY_EDGE__WEIGHT, oldWeight, weight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MySADslPackage.ACTIVITY_EDGE__TYPE:
        return getType();
      case MySADslPackage.ACTIVITY_EDGE__ID:
        return getId();
      case MySADslPackage.ACTIVITY_EDGE__SID:
        return getSid();
      case MySADslPackage.ACTIVITY_EDGE__KIND_OF_RATE:
        return getKindOfRate();
      case MySADslPackage.ACTIVITY_EDGE__REALIZED_FLOW:
        return getRealizedFlow();
      case MySADslPackage.ACTIVITY_EDGE__TARGET:
        return getTarget();
      case MySADslPackage.ACTIVITY_EDGE__SOURCE:
        return getSource();
      case MySADslPackage.ACTIVITY_EDGE__INTERRUPTS:
        return getInterrupts();
      case MySADslPackage.ACTIVITY_EDGE__RATE:
        return getRate();
      case MySADslPackage.ACTIVITY_EDGE__PROBABILITY:
        return getProbability();
      case MySADslPackage.ACTIVITY_EDGE__GUARD:
        return getGuard();
      case MySADslPackage.ACTIVITY_EDGE__WEIGHT:
        return getWeight();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MySADslPackage.ACTIVITY_EDGE__TYPE:
        setType((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__ID:
        setId((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__SID:
        setSid((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__KIND_OF_RATE:
        setKindOfRate((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__REALIZED_FLOW:
        setRealizedFlow((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__TARGET:
        setTarget((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__SOURCE:
        setSource((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__INTERRUPTS:
        setInterrupts((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__RATE:
        setRate((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__PROBABILITY:
        setProbability((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__GUARD:
        setGuard((String)newValue);
        return;
      case MySADslPackage.ACTIVITY_EDGE__WEIGHT:
        setWeight((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MySADslPackage.ACTIVITY_EDGE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__ID:
        setId(ID_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__SID:
        setSid(SID_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__KIND_OF_RATE:
        setKindOfRate(KIND_OF_RATE_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__REALIZED_FLOW:
        setRealizedFlow(REALIZED_FLOW_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__TARGET:
        setTarget(TARGET_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__SOURCE:
        setSource(SOURCE_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__INTERRUPTS:
        setInterrupts(INTERRUPTS_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__RATE:
        setRate(RATE_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__PROBABILITY:
        setProbability(PROBABILITY_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__GUARD:
        setGuard(GUARD_EDEFAULT);
        return;
      case MySADslPackage.ACTIVITY_EDGE__WEIGHT:
        setWeight(WEIGHT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MySADslPackage.ACTIVITY_EDGE__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MySADslPackage.ACTIVITY_EDGE__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MySADslPackage.ACTIVITY_EDGE__SID:
        return SID_EDEFAULT == null ? sid != null : !SID_EDEFAULT.equals(sid);
      case MySADslPackage.ACTIVITY_EDGE__KIND_OF_RATE:
        return KIND_OF_RATE_EDEFAULT == null ? kindOfRate != null : !KIND_OF_RATE_EDEFAULT.equals(kindOfRate);
      case MySADslPackage.ACTIVITY_EDGE__REALIZED_FLOW:
        return REALIZED_FLOW_EDEFAULT == null ? realizedFlow != null : !REALIZED_FLOW_EDEFAULT.equals(realizedFlow);
      case MySADslPackage.ACTIVITY_EDGE__TARGET:
        return TARGET_EDEFAULT == null ? target != null : !TARGET_EDEFAULT.equals(target);
      case MySADslPackage.ACTIVITY_EDGE__SOURCE:
        return SOURCE_EDEFAULT == null ? source != null : !SOURCE_EDEFAULT.equals(source);
      case MySADslPackage.ACTIVITY_EDGE__INTERRUPTS:
        return INTERRUPTS_EDEFAULT == null ? interrupts != null : !INTERRUPTS_EDEFAULT.equals(interrupts);
      case MySADslPackage.ACTIVITY_EDGE__RATE:
        return RATE_EDEFAULT == null ? rate != null : !RATE_EDEFAULT.equals(rate);
      case MySADslPackage.ACTIVITY_EDGE__PROBABILITY:
        return PROBABILITY_EDEFAULT == null ? probability != null : !PROBABILITY_EDEFAULT.equals(probability);
      case MySADslPackage.ACTIVITY_EDGE__GUARD:
        return GUARD_EDEFAULT == null ? guard != null : !GUARD_EDEFAULT.equals(guard);
      case MySADslPackage.ACTIVITY_EDGE__WEIGHT:
        return WEIGHT_EDEFAULT == null ? weight != null : !WEIGHT_EDEFAULT.equals(weight);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", id: ");
    result.append(id);
    result.append(", sid: ");
    result.append(sid);
    result.append(", kindOfRate: ");
    result.append(kindOfRate);
    result.append(", realizedFlow: ");
    result.append(realizedFlow);
    result.append(", target: ");
    result.append(target);
    result.append(", source: ");
    result.append(source);
    result.append(", interrupts: ");
    result.append(interrupts);
    result.append(", rate: ");
    result.append(rate);
    result.append(", probability: ");
    result.append(probability);
    result.append(", guard: ");
    result.append(guard);
    result.append(", weight: ");
    result.append(weight);
    result.append(')');
    return result.toString();
  }

} //ActivityEdgeImpl
