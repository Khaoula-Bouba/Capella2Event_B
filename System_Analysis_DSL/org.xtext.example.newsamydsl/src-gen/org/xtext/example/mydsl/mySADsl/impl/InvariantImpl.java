/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.mydsl.mySADsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.mySADsl.Invariant;
import org.xtext.example.mydsl.mySADsl.MySADslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Invariant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InvariantImpl#getLeftPart <em>Left Part</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InvariantImpl#getRightPart <em>Right Part</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InvariantImpl extends MinimalEObjectImpl.Container implements Invariant
{
  /**
   * The default value of the '{@link #getLeftPart() <em>Left Part</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftPart()
   * @generated
   * @ordered
   */
  protected static final String LEFT_PART_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLeftPart() <em>Left Part</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftPart()
   * @generated
   * @ordered
   */
  protected String leftPart = LEFT_PART_EDEFAULT;

  /**
   * The default value of the '{@link #getRightPart() <em>Right Part</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightPart()
   * @generated
   * @ordered
   */
  protected static final String RIGHT_PART_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRightPart() <em>Right Part</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightPart()
   * @generated
   * @ordered
   */
  protected String rightPart = RIGHT_PART_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InvariantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MySADslPackage.eINSTANCE.getInvariant();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLeftPart()
  {
    return leftPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeftPart(String newLeftPart)
  {
    String oldLeftPart = leftPart;
    leftPart = newLeftPart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INVARIANT__LEFT_PART, oldLeftPart, leftPart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRightPart()
  {
    return rightPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRightPart(String newRightPart)
  {
    String oldRightPart = rightPart;
    rightPart = newRightPart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INVARIANT__RIGHT_PART, oldRightPart, rightPart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MySADslPackage.INVARIANT__LEFT_PART:
        return getLeftPart();
      case MySADslPackage.INVARIANT__RIGHT_PART:
        return getRightPart();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MySADslPackage.INVARIANT__LEFT_PART:
        setLeftPart((String)newValue);
        return;
      case MySADslPackage.INVARIANT__RIGHT_PART:
        setRightPart((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MySADslPackage.INVARIANT__LEFT_PART:
        setLeftPart(LEFT_PART_EDEFAULT);
        return;
      case MySADslPackage.INVARIANT__RIGHT_PART:
        setRightPart(RIGHT_PART_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MySADslPackage.INVARIANT__LEFT_PART:
        return LEFT_PART_EDEFAULT == null ? leftPart != null : !LEFT_PART_EDEFAULT.equals(leftPart);
      case MySADslPackage.INVARIANT__RIGHT_PART:
        return RIGHT_PART_EDEFAULT == null ? rightPart != null : !RIGHT_PART_EDEFAULT.equals(rightPart);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (leftPart: ");
    result.append(leftPart);
    result.append(", rightPart: ");
    result.append(rightPart);
    result.append(')');
    return result.toString();
  }

} //InvariantImpl
