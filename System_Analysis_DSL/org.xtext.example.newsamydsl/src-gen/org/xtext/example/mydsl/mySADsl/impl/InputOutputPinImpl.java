/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.mydsl.mySADsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.mySADsl.InputOutputPin;
import org.xtext.example.mydsl.mySADsl.MySADslPackage;
import org.xtext.example.mydsl.mySADsl.ValueSpecification;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Input Output Pin</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getSid <em>Sid</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getKindOfNode <em>Kind Of Node</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getOrdering <em>Ordering</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getAbstractType <em>Abstract Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getInState <em>In State</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getSelection <em>Selection</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getInputEvaluationAction <em>Input Evaluation Action</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getIsControlType <em>Is Control Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getIsControl <em>Is Control</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mySADsl.impl.InputOutputPinImpl#getUpperBound <em>Upper Bound</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InputOutputPinImpl extends MinimalEObjectImpl.Container implements InputOutputPin
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected static final String SID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSid() <em>Sid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSid()
   * @generated
   * @ordered
   */
  protected String sid = SID_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getKindOfNode() <em>Kind Of Node</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKindOfNode()
   * @generated
   * @ordered
   */
  protected static final String KIND_OF_NODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKindOfNode() <em>Kind Of Node</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKindOfNode()
   * @generated
   * @ordered
   */
  protected String kindOfNode = KIND_OF_NODE_EDEFAULT;

  /**
   * The default value of the '{@link #getOrdering() <em>Ordering</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrdering()
   * @generated
   * @ordered
   */
  protected static final String ORDERING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOrdering() <em>Ordering</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrdering()
   * @generated
   * @ordered
   */
  protected String ordering = ORDERING_EDEFAULT;

  /**
   * The default value of the '{@link #getAbstractType() <em>Abstract Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstractType()
   * @generated
   * @ordered
   */
  protected static final String ABSTRACT_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAbstractType() <em>Abstract Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstractType()
   * @generated
   * @ordered
   */
  protected String abstractType = ABSTRACT_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getInState() <em>In State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInState()
   * @generated
   * @ordered
   */
  protected static final String IN_STATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInState() <em>In State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInState()
   * @generated
   * @ordered
   */
  protected String inState = IN_STATE_EDEFAULT;

  /**
   * The default value of the '{@link #getSelection() <em>Selection</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelection()
   * @generated
   * @ordered
   */
  protected static final String SELECTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSelection() <em>Selection</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelection()
   * @generated
   * @ordered
   */
  protected String selection = SELECTION_EDEFAULT;

  /**
   * The default value of the '{@link #getInputEvaluationAction() <em>Input Evaluation Action</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputEvaluationAction()
   * @generated
   * @ordered
   */
  protected static final String INPUT_EVALUATION_ACTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInputEvaluationAction() <em>Input Evaluation Action</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputEvaluationAction()
   * @generated
   * @ordered
   */
  protected String inputEvaluationAction = INPUT_EVALUATION_ACTION_EDEFAULT;

  /**
   * The default value of the '{@link #getIsControlType() <em>Is Control Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsControlType()
   * @generated
   * @ordered
   */
  protected static final String IS_CONTROL_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIsControlType() <em>Is Control Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsControlType()
   * @generated
   * @ordered
   */
  protected String isControlType = IS_CONTROL_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getIsControl() <em>Is Control</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsControl()
   * @generated
   * @ordered
   */
  protected static final String IS_CONTROL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIsControl() <em>Is Control</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsControl()
   * @generated
   * @ordered
   */
  protected String isControl = IS_CONTROL_EDEFAULT;

  /**
   * The cached value of the '{@link #getUpperBound() <em>Upper Bound</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpperBound()
   * @generated
   * @ordered
   */
  protected ValueSpecification upperBound;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InputOutputPinImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MySADslPackage.eINSTANCE.getInputOutputPin();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSid()
  {
    return sid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSid(String newSid)
  {
    String oldSid = sid;
    sid = newSid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__SID, oldSid, sid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKindOfNode()
  {
    return kindOfNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKindOfNode(String newKindOfNode)
  {
    String oldKindOfNode = kindOfNode;
    kindOfNode = newKindOfNode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__KIND_OF_NODE, oldKindOfNode, kindOfNode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOrdering()
  {
    return ordering;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrdering(String newOrdering)
  {
    String oldOrdering = ordering;
    ordering = newOrdering;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__ORDERING, oldOrdering, ordering));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAbstractType()
  {
    return abstractType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAbstractType(String newAbstractType)
  {
    String oldAbstractType = abstractType;
    abstractType = newAbstractType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__ABSTRACT_TYPE, oldAbstractType, abstractType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInState()
  {
    return inState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInState(String newInState)
  {
    String oldInState = inState;
    inState = newInState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__IN_STATE, oldInState, inState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSelection()
  {
    return selection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSelection(String newSelection)
  {
    String oldSelection = selection;
    selection = newSelection;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__SELECTION, oldSelection, selection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInputEvaluationAction()
  {
    return inputEvaluationAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInputEvaluationAction(String newInputEvaluationAction)
  {
    String oldInputEvaluationAction = inputEvaluationAction;
    inputEvaluationAction = newInputEvaluationAction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__INPUT_EVALUATION_ACTION, oldInputEvaluationAction, inputEvaluationAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIsControlType()
  {
    return isControlType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsControlType(String newIsControlType)
  {
    String oldIsControlType = isControlType;
    isControlType = newIsControlType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL_TYPE, oldIsControlType, isControlType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIsControl()
  {
    return isControl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsControl(String newIsControl)
  {
    String oldIsControl = isControl;
    isControl = newIsControl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL, oldIsControl, isControl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueSpecification getUpperBound()
  {
    return upperBound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpperBound(ValueSpecification newUpperBound, NotificationChain msgs)
  {
    ValueSpecification oldUpperBound = upperBound;
    upperBound = newUpperBound;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND, oldUpperBound, newUpperBound);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUpperBound(ValueSpecification newUpperBound)
  {
    if (newUpperBound != upperBound)
    {
      NotificationChain msgs = null;
      if (upperBound != null)
        msgs = ((InternalEObject)upperBound).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND, null, msgs);
      if (newUpperBound != null)
        msgs = ((InternalEObject)newUpperBound).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND, null, msgs);
      msgs = basicSetUpperBound(newUpperBound, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND, newUpperBound, newUpperBound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND:
        return basicSetUpperBound(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MySADslPackage.INPUT_OUTPUT_PIN__TYPE:
        return getType();
      case MySADslPackage.INPUT_OUTPUT_PIN__ID:
        return getId();
      case MySADslPackage.INPUT_OUTPUT_PIN__SID:
        return getSid();
      case MySADslPackage.INPUT_OUTPUT_PIN__NAME:
        return getName();
      case MySADslPackage.INPUT_OUTPUT_PIN__KIND_OF_NODE:
        return getKindOfNode();
      case MySADslPackage.INPUT_OUTPUT_PIN__ORDERING:
        return getOrdering();
      case MySADslPackage.INPUT_OUTPUT_PIN__ABSTRACT_TYPE:
        return getAbstractType();
      case MySADslPackage.INPUT_OUTPUT_PIN__IN_STATE:
        return getInState();
      case MySADslPackage.INPUT_OUTPUT_PIN__SELECTION:
        return getSelection();
      case MySADslPackage.INPUT_OUTPUT_PIN__INPUT_EVALUATION_ACTION:
        return getInputEvaluationAction();
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL_TYPE:
        return getIsControlType();
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL:
        return getIsControl();
      case MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND:
        return getUpperBound();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MySADslPackage.INPUT_OUTPUT_PIN__TYPE:
        setType((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__ID:
        setId((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__SID:
        setSid((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__NAME:
        setName((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__KIND_OF_NODE:
        setKindOfNode((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__ORDERING:
        setOrdering((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__ABSTRACT_TYPE:
        setAbstractType((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__IN_STATE:
        setInState((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__SELECTION:
        setSelection((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__INPUT_EVALUATION_ACTION:
        setInputEvaluationAction((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL_TYPE:
        setIsControlType((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL:
        setIsControl((String)newValue);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND:
        setUpperBound((ValueSpecification)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MySADslPackage.INPUT_OUTPUT_PIN__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__ID:
        setId(ID_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__SID:
        setSid(SID_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__KIND_OF_NODE:
        setKindOfNode(KIND_OF_NODE_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__ORDERING:
        setOrdering(ORDERING_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__ABSTRACT_TYPE:
        setAbstractType(ABSTRACT_TYPE_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__IN_STATE:
        setInState(IN_STATE_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__SELECTION:
        setSelection(SELECTION_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__INPUT_EVALUATION_ACTION:
        setInputEvaluationAction(INPUT_EVALUATION_ACTION_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL_TYPE:
        setIsControlType(IS_CONTROL_TYPE_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL:
        setIsControl(IS_CONTROL_EDEFAULT);
        return;
      case MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND:
        setUpperBound((ValueSpecification)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MySADslPackage.INPUT_OUTPUT_PIN__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MySADslPackage.INPUT_OUTPUT_PIN__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MySADslPackage.INPUT_OUTPUT_PIN__SID:
        return SID_EDEFAULT == null ? sid != null : !SID_EDEFAULT.equals(sid);
      case MySADslPackage.INPUT_OUTPUT_PIN__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MySADslPackage.INPUT_OUTPUT_PIN__KIND_OF_NODE:
        return KIND_OF_NODE_EDEFAULT == null ? kindOfNode != null : !KIND_OF_NODE_EDEFAULT.equals(kindOfNode);
      case MySADslPackage.INPUT_OUTPUT_PIN__ORDERING:
        return ORDERING_EDEFAULT == null ? ordering != null : !ORDERING_EDEFAULT.equals(ordering);
      case MySADslPackage.INPUT_OUTPUT_PIN__ABSTRACT_TYPE:
        return ABSTRACT_TYPE_EDEFAULT == null ? abstractType != null : !ABSTRACT_TYPE_EDEFAULT.equals(abstractType);
      case MySADslPackage.INPUT_OUTPUT_PIN__IN_STATE:
        return IN_STATE_EDEFAULT == null ? inState != null : !IN_STATE_EDEFAULT.equals(inState);
      case MySADslPackage.INPUT_OUTPUT_PIN__SELECTION:
        return SELECTION_EDEFAULT == null ? selection != null : !SELECTION_EDEFAULT.equals(selection);
      case MySADslPackage.INPUT_OUTPUT_PIN__INPUT_EVALUATION_ACTION:
        return INPUT_EVALUATION_ACTION_EDEFAULT == null ? inputEvaluationAction != null : !INPUT_EVALUATION_ACTION_EDEFAULT.equals(inputEvaluationAction);
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL_TYPE:
        return IS_CONTROL_TYPE_EDEFAULT == null ? isControlType != null : !IS_CONTROL_TYPE_EDEFAULT.equals(isControlType);
      case MySADslPackage.INPUT_OUTPUT_PIN__IS_CONTROL:
        return IS_CONTROL_EDEFAULT == null ? isControl != null : !IS_CONTROL_EDEFAULT.equals(isControl);
      case MySADslPackage.INPUT_OUTPUT_PIN__UPPER_BOUND:
        return upperBound != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", id: ");
    result.append(id);
    result.append(", sid: ");
    result.append(sid);
    result.append(", name: ");
    result.append(name);
    result.append(", kindOfNode: ");
    result.append(kindOfNode);
    result.append(", ordering: ");
    result.append(ordering);
    result.append(", abstractType: ");
    result.append(abstractType);
    result.append(", inState: ");
    result.append(inState);
    result.append(", selection: ");
    result.append(selection);
    result.append(", inputEvaluationAction: ");
    result.append(inputEvaluationAction);
    result.append(", isControlType: ");
    result.append(isControlType);
    result.append(", isControl: ");
    result.append(isControl);
    result.append(')');
    return result.toString();
  }

} //InputOutputPinImpl
